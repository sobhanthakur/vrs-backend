<?php

declare(strict_types=1);

namespace Application\Migrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20190924055424 extends AbstractMigration
{
    public function getDescription() : string
    {
        return '';
    }

    public function up(Schema $schema) : void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mssql', 'Migration can only be executed safely on \'mssql\'.');

        $this->addSql('CREATE TABLE Notifications (NotificationID INT IDENTITY NOT NULL, MessageID INT, CustomerNotificationID INT, TypeID INT NOT NULL, CustomerID INT, FromCustomerID INT, IssueID INT, ListStartDate DATE, ListEndDate DATE, Subject VARCHAR(MAX), Email VARCHAR(MAX), Phone NVARCHAR(50), Notification VARCHAR(MAX), CreateDate DATETIME2(6) NOT NULL, TaskID INT, AccountCustomerID INT, OwnerID INT, ServicerID INT, PropertyBookingID INT, FromServicerID INT, PRIMARY KEY (NotificationID))');
        $this->addSql('CREATE INDEX MessageID ON Notifications (MessageID, AccountCustomerID, TaskID)');
        $this->addSql('CREATE INDEX servicerID ON Notifications (ServicerID)');
        $this->addSql('CREATE INDEX TaskID ON Notifications (TaskID)');
        $this->addSql('CREATE INDEX TypeID ON Notifications (TypeID)');
        $this->addSql('CREATE INDEX IDX_D37EFB26C409BF01 ON Notifications (AccountCustomerID)');
        $this->addSql('CREATE INDEX IDX_D37EFB26148DE471 ON Notifications (OwnerID)');
        $this->addSql('CREATE INDEX IDX_D37EFB26CC6341F ON Notifications (PropertyBookingID)');
        $this->addSql('CREATE INDEX IDX_D37EFB26AC1A3790 ON Notifications (FromServicerID)');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT DF_D37EFB26_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE GPSTracking (GPSTrackingID INT IDENTITY NOT NULL, IsMobile BIT NOT NULL, UserAgent VARCHAR(MAX), Latitude DOUBLE PRECISION NOT NULL, Longitude DOUBLE PRECISION NOT NULL, Accuracy DOUBLE PRECISION, CreateDate DATETIME2(6), ServicerID INT, PRIMARY KEY (GPSTrackingID))');
        $this->addSql('CREATE INDEX IDX_521799583C7E7BEF ON GPSTracking (ServicerID)');
        $this->addSql('ALTER TABLE GPSTracking ADD CONSTRAINT DF_52179958_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE APIKeysToAPIPublicResources (APIKeyToAPIPublicResourceID INT IDENTITY NOT NULL, AccessLevel INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, APIKeyID INT, APIPublicResourceID INT, PRIMARY KEY (APIKeyToAPIPublicResourceID))');
        $this->addSql('CREATE INDEX IDX_CA5905CCA366E37A ON APIKeysToAPIPublicResources (APIKeyID)');
        $this->addSql('CREATE INDEX IDX_CA5905CC8BC57D53 ON APIKeysToAPIPublicResources (APIPublicResourceID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=none, 1= read only, 2= read and write\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'APIKeysToAPIPublicResources\', N\'COLUMN\', AccessLevel');
        $this->addSql('ALTER TABLE APIKeysToAPIPublicResources ADD CONSTRAINT DF_CA5905CC_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE RegionGroups (RegionGroupID INT IDENTITY NOT NULL, RegionGroup NVARCHAR(50) NOT NULL, SortOrder INT NOT NULL, CreateDAte DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (RegionGroupID))');
        $this->addSql('CREATE INDEX IDX_DDAC083A854CF4BD ON RegionGroups (CustomerID)');
        $this->addSql('ALTER TABLE RegionGroups ADD CONSTRAINT DF_DDAC083A_2F5C605A DEFAULT \'getutcdate()\' FOR CreateDAte');
        $this->addSql('CREATE TABLE TasksToChecklistItems (TaskToChecklistItemID INT IDENTITY NOT NULL, ChecklistTypeID INT NOT NULL, OptionID INT, Checked BIT NOT NULL, ChecklistItem NVARCHAR(255), Description NVARCHAR(255), Image NVARCHAR(255), EnteredValue NVARCHAR(255), ImageUploaded NVARCHAR(255), OptionSelected NVARCHAR(255), ColumnValue INT NOT NULL, ShowOnOwnerReport BIT NOT NULL, ShowImageOnOwnerReport BIT NOT NULL, SortOrder INT NOT NULL, deduped BIT NOT NULL, Createdate DATETIME2(6) NOT NULL, TaskID INT, ChecklistItemID INT, PRIMARY KEY (TaskToChecklistItemID))');
        $this->addSql('CREATE INDEX ChecklistItemID ON TasksToChecklistItems (ChecklistItemID)');
        $this->addSql('CREATE INDEX ChecklistTypeID ON TasksToChecklistItems (ChecklistTypeID)');
        $this->addSql('CREATE INDEX dedup ON TasksToChecklistItems (deduped)');
        $this->addSql('CREATE INDEX optionid ON TasksToChecklistItems (OptionID)');
        $this->addSql('CREATE INDEX TaskID ON TasksToChecklistItems (TaskID)');
        $this->addSql('ALTER TABLE TasksToChecklistItems ADD CONSTRAINT DF_BD3AEC17_B7238984 DEFAULT \'getutcdate()\' FOR Createdate');
        $this->addSql('CREATE TABLE PropertyItemTypes (PropertyItemTypeID INT IDENTITY NOT NULL, PropertyItemType NVARCHAR(50) NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (PropertyItemTypeID))');
        $this->addSql('CREATE INDEX CustomerID ON PropertyItemTypes (CustomerID)');
        $this->addSql('CREATE INDEX sortorder ON PropertyItemTypes (SortOrder)');
        $this->addSql('ALTER TABLE PropertyItemTypes ADD CONSTRAINT DF_D1F153A9_BD931E5E DEFAULT 1 FOR SortOrder');
        $this->addSql('ALTER TABLE PropertyItemTypes ADD CONSTRAINT DF_D1F153A9_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ServicesToProperties (ServiceToPropertyID INT IDENTITY NOT NULL, Amount DOUBLE PRECISION, MinTimeToComplete DOUBLE PRECISION, MaxTimeToComplete DOUBLE PRECISION, NumberOfServicers INT, PiecePay DOUBLE PRECISION, LaborAmount DOUBLE PRECISION, MaterialsAmount DOUBLE PRECISION, CreateDate DATETIME2(6) NOT NULL, ServiceID INT, PropertyID INT, ChecklistID INT, DefaultServicerID INT, PRIMARY KEY (ServiceToPropertyID))');
        $this->addSql('CREATE INDEX defaultservicerid ON ServicesToProperties (DefaultServicerID)');
        $this->addSql('CREATE INDEX PropertyID ON ServicesToProperties (PropertyID)');
        $this->addSql('CREATE INDEX ServiceID ON ServicesToProperties (ServiceID)');
        $this->addSql('CREATE INDEX IDX_40044863B650950C ON ServicesToProperties (ChecklistID)');
        $this->addSql('ALTER TABLE ServicesToProperties ADD CONSTRAINT DF_40044863_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE IntegrationQBBatches (IntegrationQBBatchID INT IDENTITY NOT NULL, BatchType INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (IntegrationQBBatchID))');
        $this->addSql('CREATE INDEX IDX_6CC1D73B854CF4BD ON IntegrationQBBatches (CustomerID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=Blling & 1=TimeTracking\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'IntegrationQBBatches\', N\'COLUMN\', BatchType');
        $this->addSql('CREATE TABLE Checklists (ChecklistID INT IDENTITY NOT NULL, ChecklistName NVARCHAR(100) NOT NULL, CreateDate DATETIME2(6) NOT NULL, ParentChecklistID INT, CustomerID INT, PRIMARY KEY (ChecklistID))');
        $this->addSql('CREATE INDEX IDX_FFDE98EFBCFBD3DE ON Checklists (ParentChecklistID)');
        $this->addSql('CREATE INDEX IDX_FFDE98EF854CF4BD ON Checklists (CustomerID)');
        $this->addSql('ALTER TABLE Checklists ADD CONSTRAINT DF_FFDE98EF_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingCustomerPropertyCounts (BillingCustomerPropertyCountID INT IDENTITY NOT NULL, Quantity INT NOT NULL, PropertyIDs VARCHAR(MAX), RemoveDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (BillingCustomerPropertyCountID))');
        $this->addSql('CREATE INDEX IDX_F973F0DD854CF4BD ON BillingCustomerPropertyCounts (CustomerID)');
        $this->addSql('ALTER TABLE BillingCustomerPropertyCounts ADD CONSTRAINT DF_F973F0DD_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE EndpointCatches (EndpointCatchID INT IDENTITY NOT NULL, PartnerID INT NOT NULL, PointCentralEventType INT, PointCentralEventSubType INT, PointCentralCustomerID INT, Handled BIT NOT NULL, PartnerPropertyID NVARCHAR(50), CatchData VARCHAR(MAX), HandledDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (EndpointCatchID))');
        $this->addSql('CREATE INDEX IDX_D5442D99854CF4BD ON EndpointCatches (CustomerID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=Pointcentral, 2=\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'EndpointCatches\', N\'COLUMN\', PartnerID');
        $this->addSql('ALTER TABLE EndpointCatches ADD CONSTRAINT DF_D5442D99_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Services (ServiceID INT IDENTITY NOT NULL, ServiceName NVARCHAR(150) NOT NULL, NumberOfServicers INT, Abbreviation NCHAR(10), ShortDescription NVARCHAR(255), TaskType INT NOT NULL, AddIfPet INT NOT NULL, AddIfOwner INT NOT NULL, AddIfNextOwner INT NOT NULL, AddIfBothOwner INT NOT NULL, Color NCHAR(10), AddTag NCHAR(100), RemoveTag NCHAR(100), ShowAllTagsOnDashboards BIT NOT NULL, ChangeOverDays INT, MinChangeOverDays INT, SkipOnMaxChangeDays INT NOT NULL, MaxDaysBeforeToComplete INT, MaxDaysToComplete INT, CompleteTime INT, MidStayDays INT, MidVacancyDays INT, MidStayDaysBeforeStart INT, MidDayOfWeekStart INT, MidStayDaysAfterEnd INT, MidStayDaysToComplete INT, MidVacancyDaysBeforeStart INT, MidVacancyDaysAfterEnd INT, MidVacancyDaysToComplete INT, ScheduleStartDate DATE, ScheduleEndDate DATE, ScheduleRecurrance INT, ScheduleType INT, ScheduleDay INT, ScheduleStartTime INT, ScheduleNumDays INT, ScheduleEndTime INT, ScheduleVacantOnly INT NOT NULL, OneOffVacantOnly BIT, ParentServiceID INT, AlertOnParentCompletion INT, AllowStartBeforeParentComplete BIT, RestrictByBookings BIT, AddPerBooking BIT, ScheduleFirstDay INT NOT NULL, IncludeGuestName BIT NOT NULL, IncludeGuestNumbers BIT NOT NULL, IncludeImageUpload BIT NOT NULL, AllowShareImagesWithOwners BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CompletionRequired BIT, NotifyCustomerOnCompletion INT, NotifyCustomerOnOverdue INT, NotifyCustomerOnDamage INT, NotifyCustomerOnMaintenance INT, NotifyCustomerOnLostAndFound INT, NotifyCustomerOnServicerNote INT, NotifyCustomerOnSupplyFlag INT, IncludeOnIssueForm BIT NOT NULL, IncludeDamage BIT, IncludeMaintenance BIT, IncludeLostAndFound BIT, IncludeSupplyFlag BIT, IncludeServicerNote BIT, NoDefaultServicerAssignedWithinDays INT NOT NULL, NotifyServicerOnOverdue INT, NotifyCustomerOnNotYetDone INT, NotifyServicerOnNotYetDone INT, NotifyServicerOnNotYetDoneHours INT, NotifyServicerOnCheckout INT, NotifyOwnerOnCompletion INT, NotifyOnAssignment INT, RequestAcceptanceOnAssignment BIT, CompletionRequest INT NOT NULL, DayBeforeReminder INT NOT NULL, ReminderReceivedRequest BIT, NotifyCustomerOnReminderReceived INT, IncludeToOwnerNote BIT, DefaultToOwnerNote NVARCHAR(255), IncludeToCustomerNote BIT, DefaultToCustomerNote NVARCHAR(500), IncludeDamageFlag BIT, IncludeLostAndFoundFlag BIT, IncludeUrgentFlag BIT, ActiveForOwner BIT NOT NULL, Active BIT NOT NULL, Billable BIT, Amount DOUBLE PRECISION, ExpenseAmount DOUBLE PRECISION, LaborAccount NVARCHAR(250), MaterialsAccount NVARCHAR(250), PayType INT NOT NULL, BH247CleaningState NCHAR(20), BH247QAState NCHAR(20), BH247MaintenanceState NCHAR(20), BH247Custom_1State NCHAR(20), BH247Custom_2State NCHAR(20), ESCAPIAHOUSEKEEPINGSTATUS NCHAR(20), CloudbedsHousekeepingStatus NCHAR(20), OpertoStatus NCHAR(40), ServiceGroupID INT, CustomerID INT, ChecklistID INT, PRIMARY KEY (ServiceID))');
        $this->addSql('CREATE INDEX active ON Services (Active)');
        $this->addSql('CREATE INDEX Billable ON Services (Billable)');
        $this->addSql('CREATE INDEX CustomerID ON Services (CustomerID)');
        $this->addSql('CREATE INDEX NonClusteredIndex_20180406_230717 ON Services (Active)');
        $this->addSql('CREATE INDEX ParentServiceID ON Services (ParentServiceID)');
        $this->addSql('CREATE INDEX servicergroupid ON Services (ServiceGroupID)');
        $this->addSql('CREATE INDEX TaskType ON Services (TaskType)');
        $this->addSql('CREATE INDEX IDX_8A44833FB650950C ON Services (ChecklistID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=CheckOut,1=CheckIn,2=Mid-Stay,3=Mid-Vacancy,4=ChangeOver\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', TaskType');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'Only for Check In & Check Out tasks\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', SkipOnMaxChangeDays');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=every <type>, 2= every other <type> etc.\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', ScheduleRecurrance');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=day,2=week,3=month\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', ScheduleType');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=every <type>, 2= every other <type> etc.\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', ScheduleEndTime');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=off,1=email only, 2=text only, 3= both text and email\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', NotifyCustomerOnCompletion');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=off,1=test only, 2=email only, 3= both text and email\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Services\', N\'COLUMN\', NotifyCustomerOnOverdue');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_B8EA90DE DEFAULT \'1\' FOR RestrictByBookings');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_448A1CF8 DEFAULT 1 FOR ScheduleFirstDay');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_70161EF5 DEFAULT \'1\' FOR IncludeImageUpload');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_C5836B64 DEFAULT \'1\' FOR CompletionRequired');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_3E149178 DEFAULT 2 FOR NotifyServicerOnNotYetDoneHours');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_1A7C64DD DEFAULT \'1\' FOR IncludeDamageFlag');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_43279F1B DEFAULT \'1\' FOR ActiveForOwner');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT DF_8A44833F_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('CREATE TABLE ChecklistsToChecklistItems (ChecklistToChecklistItemID INT IDENTITY NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, ChecklistID INT, ChecklistItemID INT, PRIMARY KEY (ChecklistToChecklistItemID))');
        $this->addSql('CREATE INDEX IDX_7D87A201B650950C ON ChecklistsToChecklistItems (ChecklistID)');
        $this->addSql('CREATE INDEX IDX_7D87A201B52FC753 ON ChecklistsToChecklistItems (ChecklistItemID)');
        $this->addSql('ALTER TABLE ChecklistsToChecklistItems ADD CONSTRAINT DF_7D87A201_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyItems (PropertyItemID INT IDENTITY NOT NULL, PropertyItemTypeID INT, Store NVARCHAR(50), Brand NVARCHAR(250), Model NVARCHAR(250), PartNumber NVARCHAR(250), SerialNumber NVARCHAR(250), Phone NVARCHAR(50), Warranty NVARCHAR(50), Description NVARCHAR(255), Image3 NVARCHAR(250), Image1 NVARCHAR(250), Image2 NVARCHAR(250), PDF NVARCHAR(250), CreateDate DATETIME2(6) NOT NULL, PropertyID INT, PRIMARY KEY (PropertyItemID))');
        $this->addSql('CREATE INDEX propertyid ON PropertyItems (PropertyID)');
        $this->addSql('CREATE INDEX propertyitemid ON PropertyItems (PropertyItemTypeID)');
        $this->addSql('CREATE INDEX propertyitemtypeid ON PropertyItems (PropertyItemTypeID)');
        $this->addSql('ALTER TABLE PropertyItems ADD CONSTRAINT DF_D19C429D_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE Contacts (ContactID INT IDENTITY NOT NULL, Name NVARCHAR(200), Phone NVARCHAR(200), Email NVARCHAR(200), Software NVARCHAR(200), Units NVARCHAR(200), BestTime NVARCHAR(200), Comments NVARCHAR(1000), CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (ContactID))');
        $this->addSql('ALTER TABLE Contacts ADD CONSTRAINT DF_CA367725_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE IntegrationQBDCustomersToProperties (IntegrationQBDCustomerToPropertyID INT IDENTITY NOT NULL, CreateDate DATETIME2(6) NOT NULL, IntegrationQBDCustomerID INT, PropertyID INT, PRIMARY KEY (IntegrationQBDCustomerToPropertyID))');
        $this->addSql('CREATE INDEX IDX_F2D44FF65224246 ON IntegrationQBDCustomersToProperties (IntegrationQBDCustomerID)');
        $this->addSql('CREATE INDEX IDX_F2D44FF655345FC6 ON IntegrationQBDCustomersToProperties (PropertyID)');
        $this->addSql('ALTER TABLE IntegrationQBDCustomersToProperties ADD CONSTRAINT DF_F2D44FF6_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyUtilities (PropertyUtilityID INT IDENTITY NOT NULL, PropertyUtility NVARCHAR(150), Phone NVARCHAR(150), Web NVARCHAR(400), Contact NVARCHAR(150), Location NVARCHAR(150), Description NVARCHAR(255), SortOrder INT NOT NULL, CreateDate DATETIME2(6), PropertyID INT, PropertyUtilityTypeID INT, PRIMARY KEY (PropertyUtilityID))');
        $this->addSql('CREATE INDEX propertyid ON PropertyUtilities (PropertyID)');
        $this->addSql('CREATE INDEX propertyutilityid ON PropertyUtilities (PropertyUtilityTypeID)');
        $this->addSql('CREATE INDEX sortorder ON PropertyUtilities (SortOrder)');
        $this->addSql('ALTER TABLE PropertyUtilities ADD CONSTRAINT DF_2FD56708_BD931E5E DEFAULT 1 FOR SortOrder');
        $this->addSql('ALTER TABLE PropertyUtilities ADD CONSTRAINT DF_2FD56708_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyBookings (PropertyBookingID INT IDENTITY NOT NULL, ImportBookingID NVARCHAR(200), PropertyIntegrationID INT, CheckIn DATE NOT NULL, CheckInTime INT NOT NULL, CheckInTimeMinutes INT NOT NULL, CheckOut DATE NOT NULL, CheckOutTime INT NOT NULL, CheckOutTimeMinutes INT NOT NULL, Guest NVARCHAR(100), GuestEmail NVARCHAR(100), GuestPhone NVARCHAR(100), NumberOfGuests INT, NumberOfChildren INT NOT NULL, NumberOfPets INT, IsOwner INT NOT NULL, Rent DOUBLE PRECISION, Deposit DOUBLE PRECISION, BookingTags NVARCHAR(3000), ManualBookingTags NVARCHAR(1000), color NCHAR(7), Marked BIT NOT NULL, Edited BIT NOT NULL, Source NVARCHAR(50), SourceID INT, iCALUID NVARCHAR(200), NewBooking BIT NOT NULL, BackToBackStart BIT NOT NULL, BackToBackEnd BIT NOT NULL, IsManuallyEntered BIT NOT NULL, BH247CheckedOut BIT NOT NULL, LockingSystemCheckedOut BIT NOT NULL, GlobalNote NVARCHAR(2000), InGlobalNote NVARCHAR(2000), OutGlobalNote NVARCHAR(2000), InternalNote NVARCHAR(2000), OwnerNote NVARCHAR(2000), PMSNote NVARCHAR(2000), JillsNotes VARCHAR(MAX), TotalIncome DOUBLE PRECISION, Active BIT NOT NULL, DeleteCount INT NOT NULL, Deleted BIT NOT NULL, DeletedDate DATETIME2(6), UpdateDate DATETIME2(6) NOT NULL, CreateDAte DATETIME2(6) NOT NULL, PropertyID INT, PRIMARY KEY (PropertyBookingID))');
        $this->addSql('CREATE INDEX active ON PropertyBookings (Active)');
        $this->addSql('CREATE INDEX checkin ON PropertyBookings (CheckIn)');
        $this->addSql('CREATE INDEX checkintime ON PropertyBookings (CheckInTime)');
        $this->addSql('CREATE INDEX checkout ON PropertyBookings (CheckOut)');
        $this->addSql('CREATE INDEX checkouttime ON PropertyBookings (CheckOutTime)');
        $this->addSql('CREATE INDEX propertyid ON PropertyBookings (PropertyID)');
        $this->addSql('CREATE INDEX PropertyIDCheckOutDeleteCount ON PropertyBookings (PropertyID, CheckOut, DeleteCount)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=icallink1,2=icallink2,3=icallink3,4=icallink4,5=json\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'PropertyBookings\', N\'COLUMN\', SourceID');
        $this->addSql('ALTER TABLE PropertyBookings ADD CONSTRAINT DF_B9498E1B_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE PropertyBookings ADD CONSTRAINT DF_B9498E1B_DFFDFF0D DEFAULT \'getutcdate()\' FOR UpdateDate');
        $this->addSql('ALTER TABLE PropertyBookings ADD CONSTRAINT DF_B9498E1B_2F5C605A DEFAULT \'getutcdate()\' FOR CreateDAte');
        $this->addSql('CREATE TABLE IntegrationQBDEmployeesToServicers (IntegrationQBDEmployeeToServicerID INT IDENTITY NOT NULL, CreateDate DATETIME2(6) NOT NULL, IntegrationQBDEmployeeID INT, ServicerID INT, PRIMARY KEY (IntegrationQBDEmployeeToServicerID))');
        $this->addSql('CREATE INDEX IDX_C9B852E049938395 ON IntegrationQBDEmployeesToServicers (IntegrationQBDEmployeeID)');
        $this->addSql('CREATE INDEX IDX_C9B852E03C7E7BEF ON IntegrationQBDEmployeesToServicers (ServicerID)');
        $this->addSql('ALTER TABLE IntegrationQBDEmployeesToServicers ADD CONSTRAINT DF_C9B852E0_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE TaskOffers (TaskOfferID INT IDENTITY NOT NULL, AcceptDate DATETIME2(6), DeclineDate DATETIME2(6), ReminderConfirmedDate DATETIME2(6), ServicerNotes VARCHAR(MAX), CreateDate DATETIME2(6), ServicerID INT, TaskID INT, PRIMARY KEY (TaskOfferID))');
        $this->addSql('CREATE INDEX IDX_DF2BF57D3C7E7BEF ON TaskOffers (ServicerID)');
        $this->addSql('CREATE INDEX IDX_DF2BF57DEF8DEFC9 ON TaskOffers (TaskID)');
        $this->addSql('ALTER TABLE TaskOffers ADD CONSTRAINT DF_DF2BF57D_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingCredits (BillingCreditID INT IDENTITY NOT NULL, CreditAmount DOUBLE PRECISION NOT NULL, CreditDate DATE, CreateDate DATETIME2(6) NOT NULL, BillingInvoiceID INT, CustomerID INT, PRIMARY KEY (BillingCreditID))');
        $this->addSql('CREATE INDEX IDX_FF2754E9A5C729DB ON BillingCredits (BillingInvoiceID)');
        $this->addSql('CREATE INDEX IDX_FF2754E9854CF4BD ON BillingCredits (CustomerID)');
        $this->addSql('ALTER TABLE BillingCredits ADD CONSTRAINT DF_FF2754E9_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingCustomerData (BillingCustomerDataID INT IDENTITY NOT NULL, BillingStartDate DATE, TaxRate DOUBLE PRECISION NOT NULL, Discount DOUBLE PRECISION, CurrentCreditAmount INT, FlatRateNumProperties INT, Monthly BIT NOT NULL, GoingToMonthly BIT NOT NULL, HasAnnualCredit BIT, BillingPaymentSourceID INT, CardLast4 NCHAR(10), BankLast4 NCHAR(10), StripeID NVARCHAR(200), StripeSubscriptionID NVARCHAR(200), StripePlanID NVARCHAR(200), StripeSourceID NVARCHAR(200), AccountStatus NVARCHAR(50), PaymentStatus NVARCHAR(50), CardErrorMessage VARCHAR(MAX), TrialDays INT, AddOnICal BIT NOT NULL, AddOnInternationalSMS BIT NOT NULL, StripeErrorMessage VARCHAR(MAX), CreateDate DATETIME2(6) NOT NULL, BasePricePerProperty INT NOT NULL, MinimumMonthlyCharge INT NOT NULL, CustomerID INT, PRIMARY KEY (BillingCustomerDataID))');
        $this->addSql('CREATE INDEX IDX_E8D5C0FE854CF4BD ON BillingCustomerData (CustomerID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'Current,Free,Trial\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'BillingCustomerData\', N\'COLUMN\', AccountStatus');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'CurrentCard,CurrentCheck,CurrentBank, CardError, Missing \', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'BillingCustomerData\', N\'COLUMN\', PaymentStatus');
        $this->addSql('ALTER TABLE BillingCustomerData ADD CONSTRAINT DF_E8D5C0FE_2518FF04 DEFAULT \'1\' FOR Monthly');
        $this->addSql('ALTER TABLE BillingCustomerData ADD CONSTRAINT DF_E8D5C0FE_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('ALTER TABLE BillingCustomerData ADD CONSTRAINT DF_E8D5C0FE_296B83C1 DEFAULT 5 FOR BasePricePerProperty');
        $this->addSql('ALTER TABLE BillingCustomerData ADD CONSTRAINT DF_E8D5C0FE_4C9CFE37 DEFAULT 50 FOR MinimumMonthlyCharge');
        $this->addSql('CREATE TABLE ServiceGroups (ServiceGroupID INT IDENTITY NOT NULL, ServiceGroup NVARCHAR(150) NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (ServiceGroupID))');
        $this->addSql('CREATE INDEX customerid ON ServiceGroups (CustomerID)');
        $this->addSql('ALTER TABLE ServiceGroups ADD CONSTRAINT DF_67F576C8_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE TimeClockTasks (TimeClockTaskID INT IDENTITY NOT NULL, ClockIn DATETIME2(6) NOT NULL, ClockOut DATETIME2(6), Note NVARCHAR(2000), AutoLogOutFlag BIT NOT NULL, InLat DOUBLE PRECISION, InLon DOUBLE PRECISION, OutLat DOUBLE PRECISION, OutLon DOUBLE PRECISION, lat DOUBLE PRECISION, lon DOUBLE PRECISION, InIsMobile BIT, InAccuracy DOUBLE PRECISION, OutIsMobile BIT, OutAccuracy DOUBLE PRECISION, UpdateDate DATETIME2(6), CreateDAte DATETIME2(6), ServicerID INT, TaskID INT, PRIMARY KEY (TimeClockTaskID))');
        $this->addSql('CREATE INDEX AutoLogOutFlag ON TimeClockTasks (AutoLogOutFlag)');
        $this->addSql('CREATE INDEX ClockIn ON TimeClockTasks (ClockIn)');
        $this->addSql('CREATE INDEX Clockout ON TimeClockTasks (ClockOut)');
        $this->addSql('CREATE INDEX ServicerID ON TimeClockTasks (ServicerID)');
        $this->addSql('CREATE INDEX TaskID ON TimeClockTasks (TaskID)');
        $this->addSql('ALTER TABLE TimeClockTasks ADD CONSTRAINT DF_B8C3D200_6A7B5B18 DEFAULT \'getutcdate()\' FOR ClockIn');
        $this->addSql('ALTER TABLE TimeClockTasks ADD CONSTRAINT DF_B8C3D200_DFFDFF0D DEFAULT \'getutcdate()\' FOR UpdateDate');
        $this->addSql('ALTER TABLE TimeClockTasks ADD CONSTRAINT DF_B8C3D200_2F5C605A DEFAULT \'getutcdate()\' FOR CreateDAte');
        $this->addSql('CREATE TABLE TimeZones (TimeZoneID INT IDENTITY NOT NULL, TimeZone DOUBLE PRECISION NOT NULL, Region NVARCHAR(100) NOT NULL, Abbreviation NCHAR(10), AddlValue DOUBLE PRECISION, CreateDate DATETIME2(6), PRIMARY KEY (TimeZoneID))');
        $this->addSql('ALTER TABLE TimeZones ADD CONSTRAINT DF_366265F9_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Onboardings (OnboardingID INT IDENTITY NOT NULL, Q1 BIT NOT NULL, Q2 BIT NOT NULL, Q3 BIT NOT NULL, Q4 BIT NOT NULL, Q5 BIT NOT NULL, Q6 BIT NOT NULL, Q7 BIT NOT NULL, Q8 BIT NOT NULL, Q9 BIT NOT NULL, Q10 BIT NOT NULL, Q11 BIT NOT NULL, Q12 BIT NOT NULL, Q13 BIT NOT NULL, Q14 BIT NOT NULL, Q15 BIT NOT NULL, Q16 BIT NOT NULL, Q1Notes VARCHAR(MAX), Q2Notes VARCHAR(MAX), Q3Notes VARCHAR(MAX), Q4Notes VARCHAR(MAX), Q5Notes VARCHAR(MAX), Q6Notes VARCHAR(MAX), Q7Notes VARCHAR(MAX), Q8Notes VARCHAR(MAX), Q9Notes VARCHAR(MAX), Q10Notes VARCHAR(MAX), Q11Notes VARCHAR(MAX), Q12Notes VARCHAR(MAX), Q13Notes VARCHAR(MAX), Q14Notes VARCHAR(MAX), Q15Notes VARCHAR(MAX), Q16Notes VARCHAR(MAX), Q1Active BIT NOT NULL, Q2Active BIT NOT NULL, Q3Active BIT NOT NULL, Q4Active BIT NOT NULL, Q5Active BIT NOT NULL, Q6Active BIT NOT NULL, Q7Active BIT NOT NULL, Q8Active BIT NOT NULL, Q9Active BIT NOT NULL, Q10Active BIT NOT NULL, Q11Active BIT NOT NULL, Q12Active BIT NOT NULL, Q13Active BIT NOT NULL, Q14Active BIT NOT NULL, Q15Active BIT NOT NULL, Q16Active BIT NOT NULL, ShowCompleted BIT NOT NULL, CustomerID INT, PRIMARY KEY (OnboardingID))');
        $this->addSql('CREATE INDEX IDX_7A09CA60854CF4BD ON Onboardings (CustomerID)');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_FCADA40 DEFAULT \'1\' FOR Q1Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_3E22C0DD DEFAULT \'1\' FOR Q2Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_9855CB69 DEFAULT \'1\' FOR Q3Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_5DF2F5E7 DEFAULT \'1\' FOR Q4Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_FB85FE53 DEFAULT \'1\' FOR Q5Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_CA6DE4CE DEFAULT \'1\' FOR Q6Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_6C1AEF7A DEFAULT \'1\' FOR Q7Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_9A529F93 DEFAULT \'1\' FOR Q8Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_3C259427 DEFAULT \'1\' FOR Q9Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_9F54EFBD DEFAULT \'1\' FOR Q10Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_3923E409 DEFAULT \'1\' FOR Q11Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_8CBFE94 DEFAULT \'1\' FOR Q12Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_AEBCF520 DEFAULT \'1\' FOR Q13Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_6B1BCBAE DEFAULT \'1\' FOR Q14Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_CD6CC01A DEFAULT \'1\' FOR Q15Active');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT DF_7A09CA60_FC84DA87 DEFAULT \'1\' FOR Q16Active');
        $this->addSql('CREATE TABLE IntegrationsToCustomers (IntegrationToCustomerID INT IDENTITY NOT NULL, Username NVARCHAR(50), Password NVARCHAR(50), QBDSyncBilling BIT NOT NULL, QBDSyncPayroll BIT NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, StartDate DATETIME2(6), IntegrationQBDHourWageTypeID INT, IntegrationQBDRateWageTypeID INT, CustomerID INT, IntegrationID INT, PRIMARY KEY (IntegrationToCustomerID))');
        $this->addSql('CREATE INDEX IDX_EE874FDF1389864B ON IntegrationsToCustomers (IntegrationQBDHourWageTypeID)');
        $this->addSql('CREATE INDEX IDX_EE874FDF4182F12B ON IntegrationsToCustomers (IntegrationQBDRateWageTypeID)');
        $this->addSql('CREATE INDEX IDX_EE874FDF854CF4BD ON IntegrationsToCustomers (CustomerID)');
        $this->addSql('CREATE INDEX IDX_EE874FDF31B9B12 ON IntegrationsToCustomers (IntegrationID)');
        $this->addSql('ALTER TABLE IntegrationsToCustomers ADD CONSTRAINT DF_EE874FDF_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE IntegrationsToCustomers ADD CONSTRAINT DF_EE874FDF_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingPaymentSources (BillingPaymentSourceID INT IDENTITY NOT NULL, BillingPaymentSource NVARCHAR(50) NOT NULL, CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (BillingPaymentSourceID))');
        $this->addSql('ALTER TABLE BillingPaymentSources ADD CONSTRAINT DF_F9756C8D_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingInvoices (BillingInvoiceID INT IDENTITY NOT NULL, StripeID NVARCHAR(50), InvoiceDate DATETIME2(6) NOT NULL, DueDate DATETIME2(6), MonthPeriodStart DATE, MonthPeriodEnd DATE, Discount DOUBLE PRECISION, BillingStatusID INT NOT NULL, NumberOfProperties INT, CreditPurchased INT, AmountDue INT, AmountPaid INT, Subtotal INT, Tax INT, TaxPercent INT, Total INT, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (BillingInvoiceID))');
        $this->addSql('CREATE INDEX IDX_4FA19F7854CF4BD ON BillingInvoices (CustomerID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=Pending, 2=Due, 3=Paid, 4=Refunded,5=Partial Refund\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'BillingInvoices\', N\'COLUMN\', BillingStatusID');
        $this->addSql('ALTER TABLE BillingInvoices ADD CONSTRAINT DF_4FA19F7_69AA61AA DEFAULT \'getutcdate()\' FOR InvoiceDate');
        $this->addSql('ALTER TABLE BillingInvoices ADD CONSTRAINT DF_4FA19F7_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE BillingInvoices ADD CONSTRAINT DF_4FA19F7_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE ServicersToEmployeeGroups (ServicerToEmployeeGroupID INT IDENTITY NOT NULL, ServicerID INT, EmployeeGroupID INT, PRIMARY KEY (ServicerToEmployeeGroupID))');
        $this->addSql('CREATE INDEX employeegroupid ON ServicersToEmployeeGroups (EmployeeGroupID)');
        $this->addSql('CREATE INDEX servicerid ON ServicersToEmployeeGroups (ServicerID)');
        $this->addSql('CREATE TABLE APIPublicResources (APIPublicResourceID INT IDENTITY NOT NULL, ResourceName NVARCHAR(100) NOT NULL, HasWrite BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (APIPublicResourceID))');
        $this->addSql('ALTER TABLE APIPublicResources ADD CONSTRAINT DF_B2A3108A_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Servicers (ServicerID INT IDENTITY NOT NULL, LinkedCustomerID INT, LinkedCustomerPin NVARCHAR(50), Name NVARCHAR(255) NOT NULL, ServicerAbbreviation NVARCHAR(50), CountryID INT NOT NULL, Email VARCHAR(MAX), SendEmails BIT NOT NULL, Phone NCHAR(20), SendTexts BIT NOT NULL, AlertOnDamage BIT NOT NULL, AlertOnMaintenance BIT NOT NULL, NotifyIfUrgent INT NOT NULL, NotifyOnCompletion INT NOT NULL, NotifyOnDamage INT NOT NULL, NotifyOnMaintenance INT NOT NULL, NotifyOnLostAndFound INT NOT NULL, NotifyOnSupplyFlag INT NOT NULL, NotifyOnServicerNote INT NOT NULL, NotifyOnNotYetDone INT NOT NULL, NotifyOnNotYetDoneHours INT NOT NULL, NotifyOnOverdue INT NOT NULL, NotifyOnAccepted INT NOT NULL, NotifyOnDeclined INT NOT NULL, NotifyOnCheckout INT NOT NULL, SendOwnerBookingNotes BIT NOT NULL, SendTaskLists INT NOT NULL, SendTaskListNightBefore BIT, SendTaskListDayOf BIT, SendTaskListWeekly BIT, SendTaskListWeeklyDay INT, FullBookingListSendSchedule INT NOT NULL, FullBookingListSendDaysBefore INT, LastMinuteBookingNotificationDays INT, ViewTasksWithinDays INT, ViewBookingsWithinDays INT, IncludeGuestName BIT, IncludeGuestNumbers BIT, IncludeGuestEmailPhone BIT NOT NULL, AllowChangeTaskDate BIT NOT NULL, AllowCreateOneOffTask BIT NOT NULL, AllowImageUpload BIT NOT NULL, ShowIssuesLog BIT NOT NULL, AllowAddStandardTask BIT NOT NULL, ServicerType INT, AllowCreateCompletedTask BIT, TaskName NVARCHAR(50), IncludeDamage BIT, IncludeMaintenance BIT, IncludeLostAndFound BIT, IncludeSupplyFlag BIT, IncludeUrgentFlag BIT, IncludeServicerNote BIT, NotifyCustomerOnCompletion INT, NotifyCustomerOnDamage INT, NotifyCustomerOnMaintenance INT, NotifyCustomerOnLostAndFound INT, NotifyCustomerOnSupplyFlag INT, NotifyCustomerOnServicerNote INT, IncludeToOwnerNote BIT, DefaultToOwnerNote VARCHAR(MAX), NotifyOwnerOnCompletion INT, AllowShareImagesWithOwners INT NOT NULL, Password NCHAR(100), Password2 NCHAR(100), AdminPassword NVARCHAR(50), WelcomeEmailSent DATETIME2(6), WorkDays NVARCHAR(50), BackupServicerID1 INT, BackupServicerID2 INT, BackupServicerID3 INT, BackupServicerID4 INT, BackupServicerID5 INT, BackupServicerID6 INT, BackupServicerID7 INT, ScheduleNote1 NVARCHAR(255), ScheduleNote2 NVARCHAR(255), ScheduleNote3 NVARCHAR(255), ScheduleNote4 NVARCHAR(255), ScheduleNote5 NVARCHAR(255), ScheduleNote7 NVARCHAR(255), ScheduleNote6 NVARCHAR(255), ScheduleNote1Show BIT NOT NULL, ScheduleNote2Show BIT NOT NULL, ScheduleNote3Show BIT NOT NULL, ScheduleNote4Show BIT NOT NULL, ScheduleNote5Show BIT NOT NULL, ScheduleNote6Show BIT NOT NULL, ScheduleNote7Show BIT NOT NULL, AllowAdminAccess BIT NOT NULL, AllowSetupAccess BIT NOT NULL, AllowServiceAssignmentAccess BIT NOT NULL, AllowAccountAccess BIT NOT NULL, AllowMasterCalendar BIT NOT NULL, AllowIssuesAccess BIT NOT NULL, AllowIssuesEdit BIT NOT NULL, AllowScheduleAccess BIT NOT NULL, AllowEditBookings BIT NOT NULL, AllowEditTasks BIT NOT NULL, AllowEditTaskPiecePay BIT NOT NULL, AllowDragandDrop BIT NOT NULL, AllowEditNotes BIT NOT NULL, AllowTracking BIT NOT NULL, AllowReports BIT NOT NULL, AllowManage BIT NOT NULL, AllowSetupEmployees BIT NOT NULL, AllowQuickReports BIT NOT NULL, AllowViewRentDeposit BIT NOT NULL, AllowEditRentDeposit BIT NOT NULL, ShowTaskTimeEstimates BIT NOT NULL, RequestAcceptTasks BIT NOT NULL, TimeTracking BIT NOT NULL, TimeTrackingMileage BIT, TimeTrackingGPS BIT, PayRate DOUBLE PRECISION, AllowStartEarly BIT NOT NULL, LanguageID INT NOT NULL, VRSCookie1 NVARCHAR(50), VRSCookie2 NVARCHAR(50), Rand NVARCHAR(50), PermissionsUpdated BIT NOT NULL, SortOrder INT NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, TimeZoneID INT, PRIMARY KEY (ServicerID))');
        $this->addSql('CREATE INDEX active ON Servicers (Active)');
        $this->addSql('CREATE INDEX customerid ON Servicers (CustomerID)');
        $this->addSql('CREATE INDEX LinkedCustomerid ON Servicers (LinkedCustomerID)');
        $this->addSql('CREATE INDEX password ON Servicers (Password)');
        $this->addSql('CREATE INDEX servicertype ON Servicers (ServicerType)');
        $this->addSql('CREATE INDEX sortorder ON Servicers (SortOrder)');
        $this->addSql('CREATE INDEX TIMETRACKING ON Servicers (TimeTracking)');
        $this->addSql('CREATE INDEX IDX_B4F997F4424D9CA0 ON Servicers (TimeZoneID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=no send, 1 = one week, 2 = one month, 3 = two months\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', FullBookingListSendSchedule');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'ForVendors, other employees should use settings from services\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', IncludeGuestName');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'For VENDORS\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', IncludeGuestNumbers');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=employee,1=vendor?,2=owner cleaner\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', ServicerType');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=off,1=email only, 2=text only, 3= both text and email\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', NotifyCustomerOnCompletion');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=english,1=spanish,2=portugese,3=french,4=japanese?\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', LanguageID');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=english,1=spanish,2=portugese,3=french,4=japanese?\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Servicers\', N\'COLUMN\', CreateDate');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_423D04DF DEFAULT 225 FOR CountryID');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_E72A076E DEFAULT \'1\' FOR SendEmails');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_64E77690 DEFAULT \'1\' FOR SendTexts');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_D061EB65 DEFAULT 2 FOR NotifyOnNotYetDoneHours');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_F81BA61C DEFAULT -1 FOR FullBookingListSendSchedule');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_D4680C0A DEFAULT \'1\' FOR AllowImageUpload');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_2A3DB244 DEFAULT \'1\' FOR ScheduleNote1Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_6D9DC894 DEFAULT \'1\' FOR ScheduleNote2Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_50FDE124 DEFAULT \'1\' FOR ScheduleNote3Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_E2DD3D34 DEFAULT \'1\' FOR ScheduleNote4Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_DFBD1484 DEFAULT \'1\' FOR ScheduleNote5Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_981D6E54 DEFAULT \'1\' FOR ScheduleNote6Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_A57D47E4 DEFAULT \'1\' FOR ScheduleNote7Show');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_7C6156D3 DEFAULT \'1\' FOR ShowTaskTimeEstimates');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT DF_B4F997F4_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ServicersToProperties (ServicerToPropertyID INT IDENTITY NOT NULL, LinkedPropertyCode NCHAR(10), CreateDate DATETIME2(6) NOT NULL, PropertyID INT, ServicerID INT, PRIMARY KEY (ServicerToPropertyID))');
        $this->addSql('CREATE INDEX ClusteredIndex_20190325_224128 ON ServicersToProperties (ServicerID, PropertyID)');
        $this->addSql('CREATE INDEX propertyid ON ServicersToProperties (PropertyID)');
        $this->addSql('CREATE INDEX servicerid ON ServicersToProperties (ServicerID)');
        $this->addSql('ALTER TABLE ServicersToProperties ADD CONSTRAINT DF_E2E698FD_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Countries (CountryID INT IDENTITY NOT NULL, CountryPhoneCode NCHAR(10) NOT NULL, Country NVARCHAR(100) NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (CountryID))');
        $this->addSql('ALTER TABLE Countries ADD CONSTRAINT DF_DF97690E_BD931E5E DEFAULT 1 FOR SortOrder');
        $this->addSql('ALTER TABLE Countries ADD CONSTRAINT DF_DF97690E_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE IntegrationQBDItems (IntegrationQBDItemID INT IDENTITY NOT NULL, CustomerID NCHAR(10), QBDItemListID NVARCHAR(50), QBDItemFullName NVARCHAR(100), Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (IntegrationQBDItemID))');
        $this->addSql('ALTER TABLE IntegrationQBDItems ADD CONSTRAINT DF_62EE1C7F_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('CREATE TABLE Plans (PlanID INT IDENTITY NOT NULL, PlanName NVARCHAR(100), IsMonthlyOrYearly BIT, PlanType INT, BasePrice INT, BaseQuantity INT, PricePerAdditional DOUBLE PRECISION, CreateDate DATE, PRIMARY KEY (PlanID))');
        $this->addSql('CREATE INDEX IsMonthlyOrYearly ON Plans (IsMonthlyOrYearly)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0 = Service COmpany, 1 = Owner, 2 = Property Manager\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Plans\', N\'COLUMN\', PlanType');
        $this->addSql('ALTER TABLE Plans ADD CONSTRAINT DF_F4A6B7D5_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ServicersToServiceGroups (ServicerToServiceGroupID INT IDENTITY NOT NULL, ServiceGroupID INT, ServicerID INT, PRIMARY KEY (ServicerToServiceGroupID))');
        $this->addSql('CREATE INDEX IDX_C9B68EF913C20B89 ON ServicersToServiceGroups (ServiceGroupID)');
        $this->addSql('CREATE INDEX IDX_C9B68EF93C7E7BEF ON ServicersToServiceGroups (ServicerID)');
        $this->addSql('CREATE TABLE BillingMonthlyItems (BillingMonthlyItemID INT IDENTITY NOT NULL, MonthlyItem NVARCHAR(100) NOT NULL, Amount DOUBLE PRECISION NOT NULL, CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (BillingMonthlyItemID))');
        $this->addSql('ALTER TABLE BillingMonthlyItems ADD CONSTRAINT DF_E214400_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE TasksToServicers (TaskToServicerID INT IDENTITY NOT NULL, IsLead BIT NOT NULL, PayType INT NOT NULL, PayRate DOUBLE PRECISION NOT NULL, PiecePay DOUBLE PRECISION, PiecePayStatus INT NOT NULL, ApprovedServicerID INT, PaidServicerID INT, FlaggedServicerID INT, Instructions VARCHAR(MAX), AcceptedDate DATETIME2(6), DeclinedDate DATETIME2(6), SentInTaskListDate DATETIME2(6), BookingNotifiedDate DATETIME2(6), BookingConfirmedDate DATETIME2(6), BookingDeclinedDate DATETIME2(6), ReminderNotifiedDate DATETIME2(6), ReminderConfirmedDate DATETIME2(6), CompleteConfirmationRequestedDate DATETIME2(6), CompleteConfirmedDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, TroubleshootingNote VARCHAR(MAX), TaskID INT, ServicerID INT, PRIMARY KEY (TaskToServicerID))');
        $this->addSql('CREATE INDEX IsLead ON TasksToServicers (IsLead)');
        $this->addSql('CREATE INDEX ServicerID ON TasksToServicers (ServicerID)');
        $this->addSql('CREATE INDEX ServicerIDwithTaskID ON TasksToServicers (TaskID, ServicerID)');
        $this->addSql('CREATE INDEX TaskID ON TasksToServicers (TaskID)');
        $this->addSql('ALTER TABLE TasksToServicers ADD CONSTRAINT DF_9D8D83DB_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ScheduledImagesToProcess (ScheduledImagesToProcessID INT IDENTITY NOT NULL, ImagePath NVARCHAR(300), NewImagePath NVARCHAR(300), TodayWithTIme DATETIME2(6), SkipTimestamp BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, DoneDate DATETIME2(6), PRIMARY KEY (ScheduledImagesToProcessID))');
        $this->addSql('ALTER TABLE ScheduledImagesToProcess ADD CONSTRAINT DF_B6DB03C9_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE TaskChanges (TaskChangeID INT IDENTITY NOT NULL, ToDate DATETIME2(6), ToServicer INT, ByServicer INT NOT NULL, ByCustomer INT NOT NULL, Description NVARCHAR(200), CreateDate DATETIME2(6) NOT NULL, TaskID INT, PRIMARY KEY (TaskChangeID))');
        $this->addSql('CREATE INDEX IDX_AB9B6D26EF8DEFC9 ON TaskChanges (TaskID)');
        $this->addSql('ALTER TABLE TaskChanges ADD CONSTRAINT DF_AB9B6D26_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Customers (CustomerID INT IDENTITY NOT NULL, PipedriveOrganizationID INT, PipedrivePersonID INT, PipedriveDealID INT, UseBeHome247 BIT, BeHome247Key NVARCHAR(200), BeHome247Secret NVARCHAR(200), UsePointCentral BIT NOT NULL, PointCentralCustomerID NVARCHAR(200), UseOperto BIT NOT NULL, OpertoPerPropertyCharge DOUBLE PRECISION NOT NULL, TagsToUse VARCHAR(MAX), FacebookID BIGINT, UUID NVARCHAR(244), iCALUUID UNIQUEIDENTIFIER, PMSystem NCHAR(10), UseOwnerOnboarding BIT NOT NULL, CurrentPlan NVARCHAR(50), PlanID INT, InternationalMessaging BIT NOT NULL, DayEndTime DOUBLE PRECISION, DefaultCheckInTime INT, DefaultCheckInTimeMinutes INT NOT NULL, DefaultCheckOutTime INT, DefaultCheckOutTimeMinutes INT NOT NULL, CancelPeriodEnd NVARCHAR(50), CustomerName NVARCHAR(250), BusinessName NVARCHAR(250), BusinessLogo NVARCHAR(100), BusinessInfo VARCHAR(MAX), QuickChangeAbbreviation NCHAR(8), SortQuickChangeToTop INT NOT NULL, Email NVARCHAR(300), EmailConfirmed BIT, BillingEmail NVARCHAR(200), Password NCHAR(50), VRSCookie1 NVARCHAR(500), VRSCookie2 NVARCHAR(500), Rand NVARCHAR(50), Phone NCHAR(200), SendEmails BIT NOT NULL, SendTexts BIT NOT NULL, TimeTracking BIT NOT NULL, PiecePay BIT NOT NULL, ShowPiecePayAmountsOnEmployeeDashboards BIT NOT NULL, TrackLaborMaterials BIT NOT NULL, DateFormat INT NOT NULL, AllowSendIssuesToOwners BIT NOT NULL, ImportOwners BIT NOT NULL, ShowStartTimeOnDashboard BIT NOT NULL, ShowTaskEndTimeOnSchedulingCalendar BIT NOT NULL, ICALAddOn BIT NOT NULL, ICALandAPI BIT NOT NULL, RequestAcceptTAsks BIT NOT NULL, AutoLogBackIn BIT NOT NULL, LastMinuteBookingNotificationDays INT, NotifyOnServicerIssueNote BIT NOT NULL, SendTaskListOnDays NVARCHAR(50), SendTaskListTime INT, SendTaskListMaxDays INT, StartNotificationTime DOUBLE PRECISION, EndNotificationTime DOUBLE PRECISION, LiveMode BIT, SetupStep NVARCHAR(255), OwnerWelcomeMessage NVARCHAR(500), VRNotes NVARCHAR(255), OfficePassword NVARCHAR(50), ImportGuestEmailPhone BIT NOT NULL, ImportBookingRentDeposit BIT NOT NULL, ImportBookingTimes BIT NOT NULL, Active BIT, GoLiveDate DATETIME2(6), TrialDays INT NOT NULL, UpdateAlertFlag BIT NOT NULL, LastLoginDate DATETIME2(6), IPAddress NVARCHAR(100), CreateDate DATETIME2(6) NOT NULL, DeletedDate DATETIME2(6), Source NVARCHAR(50), AllowSendIssuesAsWorkOrders BIT NOT NULL, AllowSendTasksAsWorkOrders BIT NOT NULL, WorkOrderIntegrationCompanyStaffID NVARCHAR(50), WorkOrderIntegrationCompanyID INT, WorkOrderIntegrationCompanyCategoryID NVARCHAR(50), WorkOrderIntegrationCompanySubCategoryID NVARCHAR(50), UseIntegrationPortal BIT NOT NULL, TimeZoneID INT, CountryID INT, PRIMARY KEY (CustomerID))');
        $this->addSql('CREATE INDEX Createdate ON Customers (CreateDate)');
        $this->addSql('CREATE INDEX golivedate ON Customers (GoLiveDate)');
        $this->addSql('CREATE INDEX LiveMode ON Customers (LiveMode)');
        $this->addSql('CREATE INDEX PlanID ON Customers (PlanID)');
        $this->addSql('CREATE INDEX TimeZoneID ON Customers (TimeZoneID)');
        $this->addSql('CREATE INDEX IDX_E0A2CC82423D04DF ON Customers (CountryID)');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_40CC0592 DEFAULT \'newid()\' FOR iCALUUID');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_B1A597EE DEFAULT 16 FOR DefaultCheckInTime');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_AE48FA7C DEFAULT 11 FOR DefaultCheckOutTime');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_7F010A3C DEFAULT 2 FOR SortQuickChangeToTop');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_E72A076E DEFAULT \'1\' FOR SendEmails');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_64E77690 DEFAULT \'1\' FOR SendTexts');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_3A820F66 DEFAULT \'1\' FOR ImportOwners');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_9BF98F99 DEFAULT \'8\' FOR StartNotificationTime');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_AF26297B DEFAULT \'20\' FOR EndNotificationTime');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_614890B DEFAULT \'1\' FOR ImportBookingTimes');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_CC1451F8 DEFAULT 30 FOR TrialDays');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT DF_E0A2CC82_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Settings (SettingID INT IDENTITY NOT NULL, LastImportedPropertyID INT NOT NULL, LastImportedPropertyIDNEW INT NOT NULL, LastImportedPropertyIntegrationID INT NOT NULL, LastImportedPropertyIcalIntegrationID INT, LastGeneratedPropertyID INT, DataImport BIT, DataImportCompletedDate DATETIME2(6), iCALDataImport BIT, iCALDataImportCompletedDate DATETIME2(6), AllScriptsLastCompleted DATETIME2(6), MinuteNotificationsCompleted BIT NOT NULL, MinuteNotificationsCompletedDate DATETIME2(6), BookingsImportServer1Completed BIT, BookingsImportServer1CompletedDate DATETIME2(6), BookingsImportServer1NewCompleted BIT, BookingsImportServer1NewCompletedDate DATETIME2(6), PropertyImportCompleted BIT, PropertyImportCompletedDate DATETIME2(6), DailyTasksCompleted BIT, DailyTasksCompletedDate DATETIME2(6), DripDailyTasksCompleted BIT, DripDailyTasksCompletedDate DATETIME2(6), GeneratePropertyTasksCompleted BIT, GeneratePropertyTasksCompletedDate DATETIME2(6), UpdateTimeZoneOffsetsComleted BIT, UpdateTimeZoneOffsetsCompletedDate DATETIME2(6), EscapiaAPIID NVARCHAR(200), EscapiaAPIExpiration DATETIME2(6), BeHome247CheckedOutCompleted BIT, BeHome247CheckedOutCompletedDate DATETIME2(6), OpertoCheckedOutCompleted BIT, OpertoCheckedOutCompletedDate DATETIME2(6), DeleteLogsServicer1Completed BIT, DeleteLogsServicer1CompletedDate DATETIME2(6), BookingsImportServer2Completed BIT, BookingsImportServer2CompletedDate DATETIME2(6), DeleteLogsServicer2Completed BIT, DeleteLogsServicer2CompletedDate DATETIME2(6), PropertyCountsCompleted BIT, PropertyCountsCompletedDate DATETIME2(6), StripeSyncBillingCompleted BIT, StripeSyncBillingCompletedDate DATETIME2(6), AnnualAccountCreditsCompleted BIT, AnnualAccountCreditsCompletedDate DATETIME2(6), ScheduledWebhooksCompleted BIT, ScheduledWebhooksCompletedDAte DATETIME2(6), ServiceReportGenerationCompleted BIT, ServiceReportGenerationCompletedDate DATETIME2(6), PropertyReportGenerationCompleted BIT, PropertyReportGenerationCompletedDate DATETIME2(6), AnnualInvoicesCompleted BIT, AnnuaInvoicesCompletedDate DATETIME2(6), OpertoCardLast4 NCHAR(10), OpertoStripeID NVARCHAR(200), OpertoStripeSourceID NVARCHAR(200), WorkOrderProcessCompleted BIT, WorkOrderProcessCompletedDate DATETIME2(6), OnceADayTasksCompleted BIT, OnceADayTasksCompletedDate DATETIME2(6), PRIMARY KEY (SettingID))');
        $this->addSql('ALTER TABLE Settings ADD CONSTRAINT DF_1C33C293_47477B8B DEFAULT \'getutcdate()\' FOR OpertoCheckedOutCompletedDate');
        $this->addSql('ALTER TABLE Settings ADD CONSTRAINT DF_1C33C293_B1BA6F7 DEFAULT \'1\' FOR StripeSyncBillingCompleted');
        $this->addSql('ALTER TABLE Settings ADD CONSTRAINT DF_1C33C293_7EAC56EA DEFAULT \'1\' FOR ServiceReportGenerationCompleted');
        $this->addSql('ALTER TABLE Settings ADD CONSTRAINT DF_1C33C293_A22664CF DEFAULT \'1\' FOR PropertyReportGenerationCompleted');
        $this->addSql('CREATE TABLE InventoryItemsToProperties (InventoryItemToPropertyID INT IDENTITY NOT NULL, CreateDate DATETIME2(6) NOT NULL, PropertyID INT, InventoryItemID INT, PRIMARY KEY (InventoryItemToPropertyID))');
        $this->addSql('CREATE INDEX IDX_6E1244EC55345FC6 ON InventoryItemsToProperties (PropertyID)');
        $this->addSql('CREATE INDEX IDX_6E1244EC575BEB8D ON InventoryItemsToProperties (InventoryItemID)');
        $this->addSql('ALTER TABLE InventoryItemsToProperties ADD CONSTRAINT DF_6E1244EC_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ChecklistItemsToServicesToProperties (ChecklistItemToServiceToPropertyID INT IDENTITY NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, ChecklistItemID INT, ServiceToPropertyID INT, PRIMARY KEY (ChecklistItemToServiceToPropertyID))');
        $this->addSql('CREATE INDEX IDX_419FB9FBB52FC753 ON ChecklistItemsToServicesToProperties (ChecklistItemID)');
        $this->addSql('CREATE INDEX IDX_419FB9FB85991014 ON ChecklistItemsToServicesToProperties (ServiceToPropertyID)');
        $this->addSql('ALTER TABLE ChecklistItemsToServicesToProperties ADD CONSTRAINT DF_419FB9FB_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyGroups (PropertyGroupID INT IDENTITY NOT NULL, PropertyGroup NVARCHAR(150) NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (PropertyGroupID))');
        $this->addSql('CREATE INDEX IDX_768E690F854CF4BD ON PropertyGroups (CustomerID)');
        $this->addSql('ALTER TABLE PropertyGroups ADD CONSTRAINT DF_768E690F_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingPayments (BillingPaymentID INT IDENTITY NOT NULL, BillingPaymentSourceID INT NOT NULL, StripeID NVARCHAR(50), CardLast4 NCHAR(4), CheckNumber NCHAR(10), Amount DOUBLE PRECISION NOT NULL, AmountRefunded DOUBLE PRECISION, Paid BIT NOT NULL, Message VARCHAR(MAX), PaymentDate DATETIME2(6) NOT NULL, CreateDate DATETIME2(6) NOT NULL, BillingInvoiceID INT, CustomerID INT, PRIMARY KEY (BillingPaymentID))');
        $this->addSql('CREATE INDEX IDX_B07AD50A5C729DB ON BillingPayments (BillingInvoiceID)');
        $this->addSql('CREATE INDEX IDX_B07AD50854CF4BD ON BillingPayments (CustomerID)');
        $this->addSql('ALTER TABLE BillingPayments ADD CONSTRAINT DF_B07AD50_F638CF5D DEFAULT \'getutcdate()\' FOR PaymentDate');
        $this->addSql('ALTER TABLE BillingPayments ADD CONSTRAINT DF_B07AD50_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ManagersToServicers (ManagerToServicerID INT IDENTITY NOT NULL, CreateDate DATETIME2(6) NOT NULL, ManagerServicerID INT, ServicerID INT, PRIMARY KEY (ManagerToServicerID))');
        $this->addSql('CREATE INDEX ManagerServicerID ON ManagersToServicers (ManagerServicerID)');
        $this->addSql('CREATE INDEX ServicerID ON ManagersToServicers (ServicerID)');
        $this->addSql('ALTER TABLE ManagersToServicers ADD CONSTRAINT DF_EF1C3B30_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE InventoryItems (InventoryItemID INT IDENTITY NOT NULL, InventoryItem VARCHAR(MAX) NOT NULL, TargetValueLow INT NOT NULL, TargetValueHigh INT NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, InventoryCategoryID INT, PRIMARY KEY (InventoryItemID))');
        $this->addSql('CREATE INDEX IDX_FA3801A4854CF4BD ON InventoryItems (CustomerID)');
        $this->addSql('CREATE INDEX IDX_FA3801A44A01608 ON InventoryItems (InventoryCategoryID)');
        $this->addSql('ALTER TABLE InventoryItems ADD CONSTRAINT DF_FA3801A4_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Regions (RegionID INT IDENTITY NOT NULL, Region NVARCHAR(50), Color NCHAR(7), SortOrder INT NOT NULL, CreateDate DATETIME2(6), CustomerID INT, RegionGroupID INT, TimeZoneID INT, PRIMARY KEY (RegionID))');
        $this->addSql('CREATE INDEX customerid ON Regions (CustomerID)');
        $this->addSql('CREATE INDEX sortorder ON Regions (SortOrder)');
        $this->addSql('CREATE INDEX IDX_6DDA406F40CBC1C7 ON Regions (RegionGroupID)');
        $this->addSql('CREATE INDEX IDX_6DDA406F424D9CA0 ON Regions (TimeZoneID)');
        $this->addSql('ALTER TABLE Regions ADD CONSTRAINT DF_6DDA406F_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE MasterCalendarNotes (MasterCalendarNoteID INT IDENTITY NOT NULL, StartDate DATE NOT NULL, EndDate DATE, ShortNote NVARCHAR(50), HoverNote NVARCHAR(100), LongDescription NVARCHAR(255), CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PropertyID INT, CreatedByServicerID INT, PRIMARY KEY (MasterCalendarNoteID))');
        $this->addSql('CREATE INDEX CustomerID ON MasterCalendarNotes (CustomerID)');
        $this->addSql('CREATE INDEX EndDate ON MasterCalendarNotes (EndDate)');
        $this->addSql('CREATE INDEX PropertyID ON MasterCalendarNotes (PropertyID)');
        $this->addSql('CREATE INDEX StartDate ON MasterCalendarNotes (StartDate)');
        $this->addSql('CREATE INDEX IDX_9D105A90245F4372 ON MasterCalendarNotes (CreatedByServicerID)');
        $this->addSql('ALTER TABLE MasterCalendarNotes ADD CONSTRAINT DF_9D105A90_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE TaskAcceptDeclines (TaskAcceptDeclineID INT IDENTITY NOT NULL, AcceptOrDecline BIT NOT NULL, Note VARCHAR(MAX), CreateDAte DATETIME2(6) NOT NULL, ServicerID INT, TaskID INT, PRIMARY KEY (TaskAcceptDeclineID))');
        $this->addSql('CREATE INDEX IDX_5F66D6763C7E7BEF ON TaskAcceptDeclines (ServicerID)');
        $this->addSql('CREATE INDEX IDX_5F66D676EF8DEFC9 ON TaskAcceptDeclines (TaskID)');
        $this->addSql('ALTER TABLE TaskAcceptDeclines ADD CONSTRAINT DF_5F66D676_2F5C605A DEFAULT \'getutcdate()\' FOR CreateDAte');
        $this->addSql('CREATE TABLE ManagersToProperties (ManagerToPropertyID INT IDENTITY NOT NULL, CreateDate DATETIME2(6) NOT NULL, ManagerServicerID INT, PropertyID INT, PRIMARY KEY (ManagerToPropertyID))');
        $this->addSql('CREATE INDEX ManagerServicerID ON ManagersToProperties (ManagerServicerID)');
        $this->addSql('CREATE INDEX PropertyID ON ManagersToProperties (PropertyID)');
        $this->addSql('ALTER TABLE ManagersToProperties ADD CONSTRAINT DF_54CCD112_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE TimeClockDays (TimeClockDayID INT IDENTITY NOT NULL, ClockIn DATETIME2(6) NOT NULL, ClockOut DATETIME2(6), autoLogOutFlag BIT NOT NULL, InLat DOUBLE PRECISION, InLon DOUBLE PRECISION, OutLat DOUBLE PRECISION, OutLon DOUBLE PRECISION, MileageIn INT, MileageOut INT, InIsMobile BIT, InAccuracy DOUBLE PRECISION, OutIsMobile BIT, OutAccuracy DOUBLE PRECISION, UpdateDate DATETIME2(6), CreateDAte DATETIME2(6), ServicerID INT, PRIMARY KEY (TimeClockDayID))');
        $this->addSql('CREATE INDEX ClockIn ON TimeClockDays (ClockIn)');
        $this->addSql('CREATE INDEX ServicerID ON TimeClockDays (ServicerID)');
        $this->addSql('ALTER TABLE TimeClockDays ADD CONSTRAINT DF_C8875821_6A7B5B18 DEFAULT \'getutcdate()\' FOR ClockIn');
        $this->addSql('ALTER TABLE TimeClockDays ADD CONSTRAINT DF_C8875821_DFFDFF0D DEFAULT \'getutcdate()\' FOR UpdateDate');
        $this->addSql('ALTER TABLE TimeClockDays ADD CONSTRAINT DF_C8875821_2F5C605A DEFAULT \'getutcdate()\' FOR CreateDAte');
        $this->addSql('CREATE TABLE CustomerReports (CustomerReportID INT IDENTITY NOT NULL, CustomerReportType INT NOT NULL, URLString VARCHAR(MAX), Status INT NOT NULL, Filename NVARCHAR(200), NumberOfRecords INT, NumberOfRecordsExported INT, CreateDate DATETIME2(6) NOT NULL, ReportCompleteDate DATETIME2(6), GenerationDate DATETIME2(6), CustomerID INT, PRIMARY KEY (CustomerReportID))');
        $this->addSql('CREATE INDEX IDX_FE919B95854CF4BD ON CustomerReports (CustomerID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1 = service history report\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'CustomerReports\', N\'COLUMN\', CustomerReportType');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0 = pending, 1 = completed\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'CustomerReports\', N\'COLUMN\', Status');
        $this->addSql('ALTER TABLE CustomerReports ADD CONSTRAINT DF_FE919B95_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Images (ImageID INT IDENTITY NOT NULL, PDF NVARCHAR(100), Image NVARCHAR(250), EmbedTag VARCHAR(MAX), ImageTitle NVARCHAR(250), ImageDescription VARCHAR(MAX), Internal BIT, ServiceIDs VARCHAR(MAX), SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, PropertyID INT, PRIMARY KEY (ImageID))');
        $this->addSql('CREATE INDEX PropertyID ON Images (PropertyID)');
        $this->addSql('CREATE INDEX SortOrder ON Images (SortOrder)');
        $this->addSql('ALTER TABLE Images ADD CONSTRAINT DF_E7B3BB5C_F2857F55 DEFAULT \'1\' FOR Internal');
        $this->addSql('ALTER TABLE Images ADD CONSTRAINT DF_E7B3BB5C_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE CustomerNotifications (CustomerNotificationID INT IDENTITY NOT NULL, CustomerNotification VARCHAR(MAX), Subject NVARCHAR(200), ForOwner BIT, ForVendor BIT, ForServicer BIT, CreateDate DATETIME2(6), CustomerID INT, PRIMARY KEY (CustomerNotificationID))');
        $this->addSql('CREATE INDEX IDX_10357F4E854CF4BD ON CustomerNotifications (CustomerID)');
        $this->addSql('ALTER TABLE CustomerNotifications ADD CONSTRAINT DF_10357F4E_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Properties (PropertyID INT IDENTITY NOT NULL, IntegrationCompanyOwnerID INT, UUID UNIQUEIDENTIFIER NOT NULL, OpertoFlag BIT NOT NULL, OpertoStartDate DATETIME2(6), OpertoEndDate DATETIME2(6), BeHome247ID INT, PointCentralID INT, PointCentralConnected BIT NOT NULL, PointCentralMessage NVARCHAR(50), LinkedPropertyID INT, LinkedPropertyCode NCHAR(10), iCalLink NVARCHAR(255), iCalLinkStatus NVARCHAR(2000), iCalLinkTry INT, ImportBlocks BIT, iCalLink4 NVARCHAR(255), iCalLink4Status NVARCHAR(2000), iCalLinkTry4 INT, ImportBlocks4 BIT, iCalLink3 NVARCHAR(255), iCalLink3Status NVARCHAR(2000), iCalLinkTry3 INT, ImportBlocks3 BIT, iCalLink2 NVARCHAR(255), iCalLink2Status NVARCHAR(2000), iCalLinkTry2 INT, ImportBlocks2 BIT, JSON NVARCHAR(255), JSONStatus NVARCHAR(2000), JsonTry INT, PerformingImport BIT NOT NULL, PerformingImportDate DATETIME2(6), ImportIssueCount INT NOT NULL, ImportIssueNote VARCHAR(MAX), PropertyName NVARCHAR(100) NOT NULL, PropertyAbbreviation NVARCHAR(6), BookingSoftwareName NVARCHAR(255), DefaultCheckInTime INT NOT NULL, DefaultCheckInTimeMinutes INT NOT NULL, DefaultCheckOutTime INT NOT NULL, DefaultCheckOutTimeMinutes INT NOT NULL, Address NVARCHAR(1000), lat DOUBLE PRECISION, lon DOUBLE PRECISION, CantFindLatLon BIT NOT NULL, PropertyNotes NVARCHAR(255), DoorCode NVARCHAR(50), Image1 NVARCHAR(1000), Image2 NVARCHAR(1000), PropertyFile NVARCHAR(1000), Description NVARCHAR(255), InternalNotes NVARCHAR(255), OnboardingBookingsChecked BIT NOT NULL, HasNoBookings BIT NOT NULL, BookingImportLinksUnavailable BIT NOT NULL, OnboardingOwnerVerified BIT NOT NULL, SetupComplete BIT NOT NULL, AccountName NVARCHAR(200), ImportCount INT NOT NULL, SortOrder INT NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, DeleteDate DATETIME2(6), UpdateDate DATETIME2(6), RegionID INT, OwnerID INT, CustomerID INT, PRIMARY KEY (PropertyID))');
        $this->addSql('CREATE INDEX active ON Properties (Active)');
        $this->addSql('CREATE INDEX CustomerID ON Properties (CustomerID)');
        $this->addSql('CREATE INDEX LinkedPropertyID ON Properties (LinkedPropertyID)');
        $this->addSql('CREATE INDEX OwnerID ON Properties (OwnerID)');
        $this->addSql('CREATE INDEX Performing_Import ON Properties (PerformingImport)');
        $this->addSql('CREATE INDEX Performing_Import_Date ON Properties (PerformingImportDate)');
        $this->addSql('CREATE INDEX PropertyName ON Properties (PropertyName)');
        $this->addSql('CREATE INDEX RegionID ON Properties (RegionID)');
        $this->addSql('CREATE INDEX sortorder ON Properties (SortOrder)');
        $this->addSql('ALTER TABLE Properties ADD CONSTRAINT DF_C89E3217_E7EABD12 DEFAULT \'newid()\' FOR UUID');
        $this->addSql('ALTER TABLE Properties ADD CONSTRAINT DF_C89E3217_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE Properties ADD CONSTRAINT DF_C89E3217_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE Owners (OwnerID INT IDENTITY NOT NULL, IntegrationCompanyOwnerID VARCHAR(MAX), OwnerName NVARCHAR(50), OwnerEmail NVARCHAR(255), OwnerPhone NVARCHAR(255), SendEmails BIT, SendTexts BIT, ReminderSchedule INT, LastMinuteBookingNotificationDays INT, AccountName NVARCHAR(200), AllowOwnerToEnterImportLinks BIT, AllowOwnerToEnterBookings BIT, AllowOwnerToChangeTimes BIT, AllowOwnerToChangeNumbers BIT, AllowOwnerToEnterBookingNote BIT, AllowOwnerToViewFutureTasks BIT, GoLiveEmailSent DATETIME2(6), WelcomeEmailSent DATETIME2(6), BookingRequestEmailSent DATETIME2(6), Password NCHAR(100), Password2 NCHAR(100), UpdateDate DATETIME2(6) NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, CountryID INT, PRIMARY KEY (OwnerID))');
        $this->addSql('CREATE INDEX IDX_45DE97CC854CF4BD ON Owners (CustomerID)');
        $this->addSql('CREATE INDEX IDX_45DE97CC423D04DF ON Owners (CountryID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0 = never, 1 = weekly, 2 = monthly\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Owners\', N\'COLUMN\', ReminderSchedule');
        $this->addSql('ALTER TABLE Owners ADD CONSTRAINT DF_45DE97CC_E72A076E DEFAULT \'1\' FOR SendEmails');
        $this->addSql('ALTER TABLE Owners ADD CONSTRAINT DF_45DE97CC_EB337E71 DEFAULT \'1\' FOR AllowOwnerToEnterImportLinks');
        $this->addSql('ALTER TABLE Owners ADD CONSTRAINT DF_45DE97CC_DFFDFF0D DEFAULT \'getutcdate()\' FOR UpdateDate');
        $this->addSql('ALTER TABLE Owners ADD CONSTRAINT DF_45DE97CC_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertiesToPropertyGroups (PropertyToPropertyGroupID INT IDENTITY NOT NULL, PropertyGroupID INT, PropertyID INT, PRIMARY KEY (PropertyToPropertyGroupID))');
        $this->addSql('CREATE INDEX PropertyGroupID ON PropertiesToPropertyGroups (PropertyGroupID)');
        $this->addSql('CREATE INDEX Propertyid ON PropertiesToPropertyGroups (PropertyID)');
        $this->addSql('CREATE TABLE ServicesToServicers (ServiceToServicerID INT IDENTITY NOT NULL, ServicerID INT NOT NULL, NotifyOnCheckout INT NOT NULL, NotifyIfUrgent INT NOT NULL, NotifyOnCompletion INT NOT NULL, NotifyOnDamage INT NOT NULL, NotifyOnMaintenance INT NOT NULL, NotifyOnLostAndFound INT NOT NULL, NotifyOnSupplyFlag INT NOT NULL, NotifyOnServicerNote INT NOT NULL, NotifyOnNotYetDone INT NOT NULL, NotifyOnNotYetDoneHours INT NOT NULL, NotifyOnOverdue INT NOT NULL, NotifyOnAccepted INT NOT NULL, NotifyOnDeclined INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, ServiceID INT, PRIMARY KEY (ServiceToServicerID))');
        $this->addSql('CREATE INDEX IDX_26D9052C30F6DDC3 ON ServicesToServicers (ServiceID)');
        $this->addSql('ALTER TABLE ServicesToServicers ADD CONSTRAINT DF_26D9052C_D061EB65 DEFAULT 2 FOR NotifyOnNotYetDoneHours');
        $this->addSql('ALTER TABLE ServicesToServicers ADD CONSTRAINT DF_26D9052C_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE InventoryCategories (InventoryCategoryID INT IDENTITY NOT NULL, InventoryCategory NVARCHAR(200) NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (InventoryCategoryID))');
        $this->addSql('CREATE INDEX IDX_990A7BD9854CF4BD ON InventoryCategories (CustomerID)');
        $this->addSql('ALTER TABLE InventoryCategories ADD CONSTRAINT DF_990A7BD9_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ScheduledWebHooks (ScheduledWebHookID INT IDENTITY NOT NULL, CustomerID INT NOT NULL, TaskID INT, ServicerID INT, PropertyID INT, PropertyBookingID INT, PartnerID INT NOT NULL, EventID INT NOT NULL, Value NVARCHAR(255), Response NVARCHAR(255), Notes NVARCHAR(255), AttemptCount INT NOT NULL, Success BIT NOT NULL, CompleteDate DATETIME2(6), AttemptDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (ScheduledWebHookID))');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'1=BeHome247\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'ScheduledWebHooks\', N\'COLUMN\', PartnerID');
        $this->addSql('ALTER TABLE ScheduledWebHooks ADD CONSTRAINT DF_9F17874C_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Issues (IssueID INT IDENTITY NOT NULL, StatusID INT NOT NULL, IssueType INT NOT NULL, Urgent BIT NOT NULL, Issue NVARCHAR(200), PropertyItemID INT, Notes NVARCHAR(255) NOT NULL, ServicerNotes NVARCHAR(255), InternalNotes NVARCHAR(255), Image1 NVARCHAR(250), Image2 NVARCHAR(250), Image3 NVARCHAR(250), Billable BIT NOT NULL, Amount DOUBLE PRECISION, ShowOnOwnerDashboard BIT NOT NULL, ShowOwnerImage1 BIT, ShowOwnerImage2 BIT, ShowOwnerImage3 BIT, ShowOnVendorDashboard BIT NOT NULL, ShowVendorImage1 BIT, ShowVendorImage2 BIT, ShowVendorImage3 BIT, ClosedDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, UpdateDate DATETIME2(6) NOT NULL, Active BIT NOT NULL, SendWorkOrder BIT, WorkOrderSentDate DATETIME2(6), WorkOrderIntegrationCompanyID INT, WorkOrderID NVARCHAR(50), WorkOrderError VARCHAR(MAX), FromTaskID INT, TaskID INT, PropertyID INT, ServicerID INT, SubmittedByServicerID INT, PRIMARY KEY (IssueID))');
        $this->addSql('CREATE INDEX Billable ON Issues (Billable)');
        $this->addSql('CREATE INDEX ClosedDate ON Issues (CreateDate)');
        $this->addSql('CREATE INDEX CreateDAte ON Issues (CreateDate)');
        $this->addSql('CREATE INDEX fromtaskID ON Issues (FromTaskID)');
        $this->addSql('CREATE INDEX issuetype ON Issues (IssueType)');
        $this->addSql('CREATE INDEX propertyid ON Issues (PropertyID)');
        $this->addSql('CREATE INDEX PropertyITemID ON Issues (PropertyItemID)');
        $this->addSql('CREATE INDEX ServicerID ON Issues (ServicerID)');
        $this->addSql('CREATE INDEX SubmittedByServicerID ON Issues (SubmittedByServicerID)');
        $this->addSql('CREATE INDEX taskid ON Issues (TaskID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=Damage,1=Maintenance,2=Lost and Found\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Issues\', N\'COLUMN\', IssueType');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT DF_DDD17AB5_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT DF_DDD17AB5_DFFDFF0D DEFAULT \'getutcdate()\' FOR UpdateDate');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT DF_DDD17AB5_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('CREATE TABLE APIKeys (APIKeyID INT IDENTITY NOT NULL, APIKey VARCHAR(MAX), Value VARCHAR(MAX), CreateDate DATETIME2(6) NOT NULL, APIKeyName NVARCHAR(100), CustomerID INT, PRIMARY KEY (APIKeyID))');
        $this->addSql('CREATE INDEX IDX_1385A7B2854CF4BD ON APIKeys (CustomerID)');
        $this->addSql('ALTER TABLE APIKeys ADD CONSTRAINT DF_1385A7B2_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE AdditionalDefaultServicers (AdditionalDefaultServicerID INT IDENTITY NOT NULL, PiecePay DOUBLE PRECISION, CreateDate DATETIME2(6) NOT NULL, ServicerID INT, ServiceToPropertyID INT, PRIMARY KEY (AdditionalDefaultServicerID))');
        $this->addSql('CREATE INDEX IDX_1A0DD39C3C7E7BEF ON AdditionalDefaultServicers (ServicerID)');
        $this->addSql('CREATE INDEX IDX_1A0DD39C85991014 ON AdditionalDefaultServicers (ServiceToPropertyID)');
        $this->addSql('ALTER TABLE AdditionalDefaultServicers ADD CONSTRAINT DF_1A0DD39C_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Integrations (IntegrationID INT IDENTITY NOT NULL, Integration NVARCHAR(50), Logo NVARCHAR(50), SortOrder INT, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, PRIMARY KEY (IntegrationID))');
        $this->addSql('ALTER TABLE Integrations ADD CONSTRAINT DF_641FB752_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE IntegrationQBDTimeTrackingRecords (IntegrationQBDTimeTrackingRecords INT IDENTITY NOT NULL, ServicerID INT NOT NULL, Day DATE, TxnID NVARCHAR(50), Status INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, SentStatus BIT, TimeTrackedSeconds INT, IntegrationQBBatchID INT, IntegrationQBDPayrollItemWageID INT, PRIMARY KEY (IntegrationQBDTimeTrackingRecords))');
        $this->addSql('CREATE INDEX IDX_CC2BFEF4ED4D199A ON IntegrationQBDTimeTrackingRecords (IntegrationQBBatchID)');
        $this->addSql('CREATE INDEX IDX_CC2BFEF4E0EE8C07 ON IntegrationQBDTimeTrackingRecords (IntegrationQBDPayrollItemWageID)');
        $this->addSql('ALTER TABLE IntegrationQBDTimeTrackingRecords ADD CONSTRAINT DF_CC2BFEF4_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE IntegrationQBDBillingRecords (IntegrationQBDBillingRecordID INT IDENTITY NOT NULL, TxnID NVARCHAR(36), ItemTxnID NVARCHAR(36), Status INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, SentStatus BIT, RefNumber INT, TaskID INT, IntegrationQBBatchID INT, PRIMARY KEY (IntegrationQBDBillingRecordID))');
        $this->addSql('CREATE INDEX IDX_A4DF0BDCEF8DEFC9 ON IntegrationQBDBillingRecords (TaskID)');
        $this->addSql('CREATE INDEX IDX_A4DF0BDCED4D199A ON IntegrationQBDBillingRecords (IntegrationQBBatchID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=Excluded,1=Approved,2=FailedToSend\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'IntegrationQBDBillingRecords\', N\'COLUMN\', Status');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=NotSentFromVRS, 1=SentFromVRS\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'IntegrationQBDBillingRecords\', N\'COLUMN\', SentStatus');
        $this->addSql('ALTER TABLE IntegrationQBDBillingRecords ADD CONSTRAINT DF_A4DF0BDC_7CAC602A DEFAULT 1 FOR Status');
        $this->addSql('ALTER TABLE IntegrationQBDBillingRecords ADD CONSTRAINT DF_A4DF0BDC_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PerformingImports (PerformingImportID INT IDENTITY NOT NULL, CreateDAte DATETIME2(6) NOT NULL, Note NCHAR(20), LastPropertyID INT, PropertyID INT, PRIMARY KEY (PerformingImportID))');
        $this->addSql('CREATE INDEX NonClusteredIndex_20181217_160400 ON PerformingImports (PropertyID)');
        $this->addSql('CREATE INDEX NonClusteredIndex_20181217_160444 ON PerformingImports (LastPropertyID)');
        $this->addSql('ALTER TABLE PerformingImports ADD CONSTRAINT DF_29AEEEE8_2F5C605A DEFAULT \'getutcdate()\' FOR CreateDAte');
        $this->addSql('CREATE TABLE IntegrationQBDEmployees (IntegrationQBDEmployeeID INT IDENTITY NOT NULL, QBDEmployeeListID NVARCHAR(50) NOT NULL, QBDEmployeeFullName NVARCHAR(100) NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (IntegrationQBDEmployeeID))');
        $this->addSql('CREATE INDEX IDX_33A27136854CF4BD ON IntegrationQBDEmployees (CustomerID)');
        $this->addSql('ALTER TABLE IntegrationQBDEmployees ADD CONSTRAINT DF_33A27136_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('CREATE TABLE ServicersToRegionGroups (ServicerToRegionGroupID INT IDENTITY NOT NULL, RegionGroupID INT, ServicerID INT, PRIMARY KEY (ServicerToRegionGroupID))');
        $this->addSql('CREATE INDEX IDX_4F3E73D240CBC1C7 ON ServicersToRegionGroups (RegionGroupID)');
        $this->addSql('CREATE INDEX IDX_4F3E73D23C7E7BEF ON ServicersToRegionGroups (ServicerID)');
        $this->addSql('CREATE TABLE IntegrationQBDItemsToServices (IntegrationQBDItemToServiceID INT IDENTITY NOT NULL, LaborOrMaterials BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, IntegrationQBDItemID INT, ServiceID INT, PRIMARY KEY (IntegrationQBDItemToServiceID))');
        $this->addSql('CREATE INDEX IDX_F80C598846C236CC ON IntegrationQBDItemsToServices (IntegrationQBDItemID)');
        $this->addSql('CREATE INDEX IDX_F80C598830F6DDC3 ON IntegrationQBDItemsToServices (ServiceID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'Labor=0,Materials=1\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'IntegrationQBDItemsToServices\', N\'COLUMN\', LaborOrMaterials');
        $this->addSql('ALTER TABLE IntegrationQBDItemsToServices ADD CONSTRAINT DF_F80C5988_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyBlocks (PropertyBlockID INT IDENTITY NOT NULL, PropertyIntegrationID INT, CheckIn DATE NOT NULL, CheckOut DATE NOT NULL, Guest NVARCHAR(50), Source NVARCHAR(50), AddError VARCHAR(MAX), ReservationID NVARCHAR(200), Ignore BIT NOT NULL, IgnoreDate DATETIME2(6), IgnoreServicerID INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, PropertyID INT, PropertyBookingID INT, PRIMARY KEY (PropertyBlockID))');
        $this->addSql('CREATE INDEX checkin ON PropertyBlocks (CheckIn)');
        $this->addSql('CREATE INDEX checkout ON PropertyBlocks (CheckOut)');
        $this->addSql('CREATE INDEX propertybookingid ON PropertyBlocks (PropertyBookingID)');
        $this->addSql('CREATE INDEX PropertyID ON PropertyBlocks (PropertyID)');
        $this->addSql('ALTER TABLE PropertyBlocks ADD CONSTRAINT DF_480EC507_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE EmployeeGroups (EmployeeGroupID INT IDENTITY NOT NULL, EmployeeGroup NVARCHAR(150) NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (EmployeeGroupID))');
        $this->addSql('CREATE INDEX CustomerID ON EmployeeGroups (CustomerID)');
        $this->addSql('ALTER TABLE EmployeeGroups ADD CONSTRAINT DF_5890A57B_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ScheduledTasks (ScheduledTaskID INT IDENTITY NOT NULL, SkipBookingImport INT NOT NULL, PerformingTask BIT NOT NULL, PerformingTaskDate DATETIME2(6), SendMessages BIT NOT NULL, Track INT, FromAdmin BIT NOT NULL, CompleteDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, PropertyID INT, PRIMARY KEY (ScheduledTaskID))');
        $this->addSql('CREATE INDEX CompleteDate ON ScheduledTasks (CompleteDate)');
        $this->addSql('CREATE INDEX FromAdmin ON ScheduledTasks (FromAdmin)');
        $this->addSql('CREATE INDEX performingtask ON ScheduledTasks (PerformingTask)');
        $this->addSql('CREATE INDEX propertyid ON ScheduledTasks (PropertyID)');
        $this->addSql('CREATE INDEX skipbookingimport ON ScheduledTasks (SkipBookingImport)');
        $this->addSql('ALTER TABLE ScheduledTasks ADD CONSTRAINT DF_CE190579_9844332B DEFAULT \'1\' FOR SendMessages');
        $this->addSql('ALTER TABLE ScheduledTasks ADD CONSTRAINT DF_CE190579_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyBookingsToServices (PropertyBookingToServiceID INT IDENTITY NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PropertyBookingID INT, ServiceID INT, PRIMARY KEY (PropertyBookingToServiceID))');
        $this->addSql('CREATE INDEX CustomerID ON PropertyBookingsToServices (CustomerID)');
        $this->addSql('CREATE INDEX ServiceID ON PropertyBookingsToServices (ServiceID)');
        $this->addSql('CREATE INDEX IDX_CD2F2E10CC6341F ON PropertyBookingsToServices (PropertyBookingID)');
        $this->addSql('ALTER TABLE PropertyBookingsToServices ADD CONSTRAINT DF_CD2F2E10_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE Tasks (TaskID INT IDENTITY NOT NULL, NextPropertyBookingID INT, PropertyItemID INT, Abbreviation NCHAR(10), TaskName NVARCHAR(200), TaskDescription NVARCHAR(255), TaskType INT NOT NULL, BackToBack BIT NOT NULL, TaskDate DATE NOT NULL, TaskTime INT, TaskTimeMinutes INT, TaskStartDate DATE, TaskStartTime INT, TaskDateTime DATETIME2(6), TaskStartTimeMinutes INT NOT NULL, NumberOfServicers INT, TaskCompleteByDate DATE, TaskCompleteByTime INT, TaskCompleteByTimeMinutes INT NOT NULL, TaskFirstStartDate DATE, TaskFirstStartTime INT, LastEventDay DATE, LastEventTime INT, LastEventIsCheckin BIT, ServiceID INT, ServicerID INT, MinTimeToComplete DOUBLE PRECISION, MaxTimeToComplete DOUBLE PRECISION, ActualTimeToComplete DOUBLE PRECISION, NeedsMaintenance BIT, HasDamage BIT, HasLostAndFound BIT, SupplyFlag BIT, Urgent BIT, Closed BIT, SortOrder INT NOT NULL, SentInTaskListDate DATETIME2(6), BookingNotifiedDate DATETIME2(6), BookingConfirmedDate DATETIME2(6), BookingDeclinedDate DATETIME2(6), ReminderNotifiedDate DATETIME2(6), ReminderConfirmedDate DATETIME2(6), CompleteConfirmationRequestedDate DATETIME2(6), CompleteConfirmedDate DATETIME2(6), CompletedByServicerID INT, ToOwnerNote NVARCHAR(255), ToCustomerNote NVARCHAR(255), ServicerNotes NVARCHAR(255), PropertyManagerNotes NVARCHAR(255), InternalNotes NVARCHAR(255), Marked BIT, Edited BIT NOT NULL, Priority INT, Active BIT NOT NULL, ClosedDate DATETIME2(6), CreateDate DATETIME2(6) NOT NULL, UpdateDate DATETIME2(6) NOT NULL, DeletedDate DATETIME2(6), ManagerServicerID INT, NotifyCustomerOnCompletion INT, NotifyCustomerOnOverdue INT, NotifyCustomerOnDamage INT, NotifyCustomerOnMaintenance INT, NotifyCustomerOnLostAndFound INT, NotifyCustomerOnSupplyFlag INT, NotifyCustomerOnServicerNote INT, IncludeDamage BIT, IncludeMaintenance BIT, IncludeLostAndFound BIT, IncludeSupplyFlag BIT, IncludeUrgentFlag BIT, IncludeServicerNote BIT, AllowShareImagesWithOwners BIT, NotifyServicerOnOverdue INT, NotifyCustomerOnNotYetDone INT, NotifyServicerOnNotYetDone INT, NotifyServicerOnNotYetDoneHours INT, NotifyOwnerOnCompletion INT, NotifyServicerOnCheckout INT, IncludeToOwnerNote BIT, DefaultToOwnerNote NVARCHAR(255), IncludeToOwnerNoteOnOwnerDashboard BIT, OwnerReportNote NVARCHAR(255), TaskDescriptionImage1 NVARCHAR(200), ShowTaskImage1OnOwnerReport BIT, TaskDescriptionImage2 NVARCHAR(200), ShowTaskImage2OnOwnerReport BIT, TaskDescriptionImage3 NVARCHAR(200), ShowTaskImage3OnOwnerReport BIT, ActiveForOwner BIT, IncludeGuestName BIT, IncludeGuestNumbers BIT, Image1 NVARCHAR(250), Image2 NVARCHAR(250), Image3 NVARCHAR(250), Image1ShowOwner BIT NOT NULL, Image2ShowOwner BIT NOT NULL, Image3ShowOwner BIT NOT NULL, Billable BIT NOT NULL, ExpenseAmount DOUBLE PRECISION NOT NULL, Amount DOUBLE PRECISION NOT NULL, BillingDescription NVARCHAR(200), ScheduleChangeDate DATETIME2(6) NOT NULL, CreatedByServicerID INT, DeactivatedByServicerID INT, AutosaveCount INT NOT NULL, SendWorkOrder BIT, WorkOrderSentDate DATETIME2(6), WorkOrderIntegrationCompany INT, WorkOrderID NVARCHAR(50), WorkOrderError VARCHAR(MAX), Locked BIT NOT NULL, LockedDate DATETIME2(6), IssueID INT, ParentTaskID INT, PropertyBookingID INT, PropertyID INT, PRIMARY KEY (TaskID))');
        $this->addSql('CREATE INDEX Active ON Tasks (Active)');
        $this->addSql('CREATE INDEX backtobakck ON Tasks (BackToBack)');
        $this->addSql('CREATE INDEX Billable ON Tasks (Billable)');
        $this->addSql('CREATE INDEX Closed ON Tasks (Closed)');
        $this->addSql('CREATE INDEX completeconfirmeddate ON Tasks (CompleteConfirmedDate)');
        $this->addSql('CREATE INDEX CompleteConfirmedDAte_Active ON Tasks (CompleteConfirmedDate, Active)');
        $this->addSql('CREATE INDEX CompletedByServicerID ON Tasks (CompletedByServicerID)');
        $this->addSql('CREATE INDEX IssueID ON Tasks (IssueID)');
        $this->addSql('CREATE INDEX NextPropertyBOokingID ON Tasks (NextPropertyBookingID)');
        $this->addSql('CREATE INDEX ParentTaskID ON Tasks (ParentTaskID)');
        $this->addSql('CREATE INDEX propertyBOokingID ON Tasks (PropertyBookingID)');
        $this->addSql('CREATE INDEX PropertyID ON Tasks (PropertyID)');
        $this->addSql('CREATE INDEX PropertyItemID ON Tasks (PropertyItemID)');
        $this->addSql('CREATE INDEX ServiceID ON Tasks (ServiceID)');
        $this->addSql('CREATE INDEX ServicerID ON Tasks (ServicerID)');
        $this->addSql('CREATE INDEX TaskDate ON Tasks (TaskDate)');
        $this->addSql('CREATE INDEX TaskTime ON Tasks (TaskTime)');
        $this->addSql('CREATE INDEX TaskTimeMinutes ON Tasks (TaskTimeMinutes)');
        $this->addSql('CREATE INDEX TaskType ON Tasks (TaskType)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0-check out, 1-check in, 2- mid stay, 3- mid vacancy, 4- change over, 5= on a  schedule, 6 - servicer created on complet, 7 - on the fly task\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Tasks\', N\'COLUMN\', TaskType');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=off,1=email only, 2=text only, 3= both text and email\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Tasks\', N\'COLUMN\', NotifyCustomerOnCompletion');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=off,1=test only, 2=email only, 3= both text and email\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Tasks\', N\'COLUMN\', NotifyCustomerOnOverdue');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'used in employee dashboard to ensure ajax submit does not overright due to latency = <<VRAUTOSAVE>>\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'Tasks\', N\'COLUMN\', AutosaveCount');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_DFFDFF0D DEFAULT \'getutcdate()\' FOR UpdateDate');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_3E149178 DEFAULT 2 FOR NotifyServicerOnNotYetDoneHours');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_4D76F3E0 DEFAULT \'1\' FOR IncludeToOwnerNoteOnOwnerDashboard');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_43279F1B DEFAULT \'1\' FOR ActiveForOwner');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_F1978F6 DEFAULT \'1\' FOR Billable');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT DF_91994A93_663872E DEFAULT \'getutcdate()\' FOR ScheduleChangeDate');
        $this->addSql('CREATE TABLE IntegrationQBDPayrollItemWages (IntegrationQBDPayrollItemWageID INT IDENTITY NOT NULL, QBDPayrollItemWageListID NVARCHAR(50), QBDPayrollItemWageName NCHAR(10), Active BIT, CreateDate DATETIME2(6), CustomerID INT, PRIMARY KEY (IntegrationQBDPayrollItemWageID))');
        $this->addSql('CREATE INDEX IDX_F203B0DA854CF4BD ON IntegrationQBDPayrollItemWages (CustomerID)');
        $this->addSql('CREATE TABLE IntegrationQBDCustomers (IntegrationQBDCustomerID INT IDENTITY NOT NULL, QBDCustomerListID NVARCHAR(50) NOT NULL, QBDCustomerFullName NVARCHAR(100) NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (IntegrationQBDCustomerID))');
        $this->addSql('CREATE INDEX IDX_EB73FC17854CF4BD ON IntegrationQBDCustomers (CustomerID)');
        $this->addSql('ALTER TABLE IntegrationQBDCustomers ADD CONSTRAINT DF_EB73FC17_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('CREATE TABLE BillingRefunds (BillingRefundID INT IDENTITY NOT NULL, StripeID NVARCHAR(200), Amount DOUBLE PRECISION NOT NULL, Reason VARCHAR(MAX), RefundDate DATETIME2(6) NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, BillingPaymentID INT, BillingInvoiceID INT, PRIMARY KEY (BillingRefundID))');
        $this->addSql('CREATE INDEX IDX_C0D5BF4EED7AE224 ON BillingRefunds (BillingPaymentID)');
        $this->addSql('CREATE INDEX IDX_C0D5BF4EA5C729DB ON BillingRefunds (BillingInvoiceID)');
        $this->addSql('ALTER TABLE BillingRefunds ADD CONSTRAINT DF_C0D5BF4E_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE BillingRefunds ADD CONSTRAINT DF_C0D5BF4E_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE ChecklistItems (ChecklistItemID INT IDENTITY NOT NULL, ChecklistTypeID INT NOT NULL, ChecklistItem NVARCHAR(400) NOT NULL, InternalName NVARCHAR(400), Description NVARCHAR(255), ShowDescription BIT NOT NULL, Image NVARCHAR(200), Options VARCHAR(MAX), ColumnCount INT, SortOrder INT NOT NULL, Required BIT NOT NULL, ShowOnOwnerReport BIT NOT NULL, ShowImageOnOwnerReport BIT, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (ChecklistItemID))');
        $this->addSql('CREATE INDEX IDX_366ECB6D854CF4BD ON ChecklistItems (CustomerID)');
        $this->addSql('ALTER TABLE ChecklistItems ADD CONSTRAINT DF_366ECB6D_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingDebits (BillingDebitID INT IDENTITY NOT NULL, PropertyCount INT, HasIcal BIT, HasInternationalSMS BIT, Amount DOUBLE PRECISION NOT NULL, DebitDate DATETIME2(6) NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (BillingDebitID))');
        $this->addSql('CREATE INDEX IDX_1C96C0F3854CF4BD ON BillingDebits (CustomerID)');
        $this->addSql('ALTER TABLE BillingDebits ADD CONSTRAINT DF_1C96C0F3_E914EA73 DEFAULT \'getutcdate()\' FOR DebitDate');
        $this->addSql('ALTER TABLE BillingDebits ADD CONSTRAINT DF_1C96C0F3_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE SchedulingCalendarNotes (SchedulingCalendarNoteID INT IDENTITY NOT NULL, StartDate DATE NOT NULL, ShortNote NVARCHAR(50), HoverNote NVARCHAR(100), LongDescription NVARCHAR(255), ShowOnEmployeeDashboard BIT NOT NULL, CreatedByServicerID INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, ServicerID INT, PRIMARY KEY (SchedulingCalendarNoteID))');
        $this->addSql('CREATE INDEX customerid ON SchedulingCalendarNotes (CustomerID)');
        $this->addSql('CREATE INDEX servicerid ON SchedulingCalendarNotes (ServicerID)');
        $this->addSql('CREATE INDEX StartDate ON SchedulingCalendarNotes (StartDate)');
        $this->addSql('ALTER TABLE SchedulingCalendarNotes ADD CONSTRAINT DF_A18E0EA4_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('CREATE TABLE PropertyUtilityTypes (PropertyUtilityTypeID INT IDENTITY NOT NULL, PropertyUtilityType NVARCHAR(50) NOT NULL, SortOrder INT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (PropertyUtilityTypeID))');
        $this->addSql('CREATE INDEX customerid ON PropertyUtilityTypes (CustomerID)');
        $this->addSql('CREATE INDEX sortorder ON PropertyUtilityTypes (SortOrder)');
        $this->addSql('ALTER TABLE PropertyUtilityTypes ADD CONSTRAINT DF_580AF743_BD931E5E DEFAULT 1 FOR SortOrder');
        $this->addSql('ALTER TABLE PropertyUtilityTypes ADD CONSTRAINT DF_580AF743_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE IntegrationQBDDataSyncLogs (IntegrationQBDDataSyncLogID INT IDENTITY NOT NULL, PayrollOrBilling BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, CustomerID INT, PRIMARY KEY (IntegrationQBDDataSyncLogID))');
        $this->addSql('CREATE INDEX IDX_87D6A9A8854CF4BD ON IntegrationQBDDataSyncLogs (CustomerID)');
        $this->addSql('EXEC sp_addextendedproperty N\'MS_Description\', N\'0=Payroll,1=Billing\', N\'SCHEMA\', \'dbo\', N\'TABLE\', \'IntegrationQBDDataSyncLogs\', N\'COLUMN\', PayrollOrBilling');
        $this->addSql('ALTER TABLE IntegrationQBDDataSyncLogs ADD CONSTRAINT DF_87D6A9A8_171126BA DEFAULT \'getutcdate()\' FOR CreateDate');
        $this->addSql('CREATE TABLE BillingInvoiceItems (BillingInvoiceItemID INT IDENTITY NOT NULL, StripeID NVARCHAR(200), Item NVARCHAR(100) NOT NULL, Description VARCHAR(MAX), Qty INT NOT NULL, Amount DOUBLE PRECISION NOT NULL, CreditPurchased DOUBLE PRECISION NOT NULL, ItemTotal DOUBLE PRECISION NOT NULL, Active BIT NOT NULL, CreateDate DATETIME2(6) NOT NULL, BillingInvoiceID INT, PRIMARY KEY (BillingInvoiceItemID))');
        $this->addSql('CREATE INDEX IDX_98B30F98A5C729DB ON BillingInvoiceItems (BillingInvoiceID)');
        $this->addSql('ALTER TABLE BillingInvoiceItems ADD CONSTRAINT DF_98B30F98_4CB2F934 DEFAULT \'1\' FOR Active');
        $this->addSql('ALTER TABLE BillingInvoiceItems ADD CONSTRAINT DF_98B30F98_171126BA DEFAULT CURRENT_TIMESTAMP FOR CreateDate');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT FK_D37EFB26EF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT FK_D37EFB26C409BF01 FOREIGN KEY (AccountCustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT FK_D37EFB26148DE471 FOREIGN KEY (OwnerID) REFERENCES Owners (OwnerID)');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT FK_D37EFB263C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT FK_D37EFB26CC6341F FOREIGN KEY (PropertyBookingID) REFERENCES PropertyBookings (PropertyBookingID)');
        $this->addSql('ALTER TABLE Notifications ADD CONSTRAINT FK_D37EFB26AC1A3790 FOREIGN KEY (FromServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE GPSTracking ADD CONSTRAINT FK_521799583C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE APIKeysToAPIPublicResources ADD CONSTRAINT FK_CA5905CCA366E37A FOREIGN KEY (APIKeyID) REFERENCES APIKeys (APIKeyID)');
        $this->addSql('ALTER TABLE APIKeysToAPIPublicResources ADD CONSTRAINT FK_CA5905CC8BC57D53 FOREIGN KEY (APIPublicResourceID) REFERENCES APIPublicResources (APIPublicResourceID)');
        $this->addSql('ALTER TABLE RegionGroups ADD CONSTRAINT FK_DDAC083A854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE TasksToChecklistItems ADD CONSTRAINT FK_BD3AEC17EF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE TasksToChecklistItems ADD CONSTRAINT FK_BD3AEC17B52FC753 FOREIGN KEY (ChecklistItemID) REFERENCES ChecklistItems (ChecklistItemID)');
        $this->addSql('ALTER TABLE PropertyItemTypes ADD CONSTRAINT FK_D1F153A9854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE ServicesToProperties ADD CONSTRAINT FK_4004486330F6DDC3 FOREIGN KEY (ServiceID) REFERENCES Services (ServiceID)');
        $this->addSql('ALTER TABLE ServicesToProperties ADD CONSTRAINT FK_4004486355345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE ServicesToProperties ADD CONSTRAINT FK_40044863B650950C FOREIGN KEY (ChecklistID) REFERENCES Checklists (ChecklistID)');
        $this->addSql('ALTER TABLE ServicesToProperties ADD CONSTRAINT FK_40044863CE23C0AF FOREIGN KEY (DefaultServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE IntegrationQBBatches ADD CONSTRAINT FK_6CC1D73B854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Checklists ADD CONSTRAINT FK_FFDE98EFBCFBD3DE FOREIGN KEY (ParentChecklistID) REFERENCES Checklists (ChecklistID)');
        $this->addSql('ALTER TABLE Checklists ADD CONSTRAINT FK_FFDE98EF854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE BillingCustomerPropertyCounts ADD CONSTRAINT FK_F973F0DD854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE EndpointCatches ADD CONSTRAINT FK_D5442D99854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT FK_8A44833F13C20B89 FOREIGN KEY (ServiceGroupID) REFERENCES ServiceGroups (ServiceGroupID)');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT FK_8A44833F854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Services ADD CONSTRAINT FK_8A44833FB650950C FOREIGN KEY (ChecklistID) REFERENCES Checklists (ChecklistID)');
        $this->addSql('ALTER TABLE ChecklistsToChecklistItems ADD CONSTRAINT FK_7D87A201B650950C FOREIGN KEY (ChecklistID) REFERENCES Checklists (ChecklistID)');
        $this->addSql('ALTER TABLE ChecklistsToChecklistItems ADD CONSTRAINT FK_7D87A201B52FC753 FOREIGN KEY (ChecklistItemID) REFERENCES ChecklistItems (ChecklistItemID)');
        $this->addSql('ALTER TABLE PropertyItems ADD CONSTRAINT FK_D19C429D55345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE IntegrationQBDCustomersToProperties ADD CONSTRAINT FK_F2D44FF65224246 FOREIGN KEY (IntegrationQBDCustomerID) REFERENCES IntegrationQBDCustomers (IntegrationQBDCustomerID)');
        $this->addSql('ALTER TABLE IntegrationQBDCustomersToProperties ADD CONSTRAINT FK_F2D44FF655345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE PropertyUtilities ADD CONSTRAINT FK_2FD5670855345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE PropertyUtilities ADD CONSTRAINT FK_2FD567086997AEA0 FOREIGN KEY (PropertyUtilityTypeID) REFERENCES PropertyUtilityTypes (PropertyUtilityTypeID)');
        $this->addSql('ALTER TABLE PropertyBookings ADD CONSTRAINT FK_B9498E1B55345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE IntegrationQBDEmployeesToServicers ADD CONSTRAINT FK_C9B852E049938395 FOREIGN KEY (IntegrationQBDEmployeeID) REFERENCES IntegrationQBDEmployees (IntegrationQBDEmployeeID)');
        $this->addSql('ALTER TABLE IntegrationQBDEmployeesToServicers ADD CONSTRAINT FK_C9B852E03C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TaskOffers ADD CONSTRAINT FK_DF2BF57D3C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TaskOffers ADD CONSTRAINT FK_DF2BF57DEF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE BillingCredits ADD CONSTRAINT FK_FF2754E9A5C729DB FOREIGN KEY (BillingInvoiceID) REFERENCES BillingInvoices (BillingInvoiceID)');
        $this->addSql('ALTER TABLE BillingCredits ADD CONSTRAINT FK_FF2754E9854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE BillingCustomerData ADD CONSTRAINT FK_E8D5C0FE854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE ServiceGroups ADD CONSTRAINT FK_67F576C8854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE TimeClockTasks ADD CONSTRAINT FK_B8C3D2003C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TimeClockTasks ADD CONSTRAINT FK_B8C3D200EF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE Onboardings ADD CONSTRAINT FK_7A09CA60854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE IntegrationsToCustomers ADD CONSTRAINT FK_EE874FDF1389864B FOREIGN KEY (IntegrationQBDHourWageTypeID) REFERENCES IntegrationQBDPayrollItemWages (IntegrationQBDPayrollItemWageID)');
        $this->addSql('ALTER TABLE IntegrationsToCustomers ADD CONSTRAINT FK_EE874FDF4182F12B FOREIGN KEY (IntegrationQBDRateWageTypeID) REFERENCES IntegrationQBDPayrollItemWages (IntegrationQBDPayrollItemWageID)');
        $this->addSql('ALTER TABLE IntegrationsToCustomers ADD CONSTRAINT FK_EE874FDF854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE IntegrationsToCustomers ADD CONSTRAINT FK_EE874FDF31B9B12 FOREIGN KEY (IntegrationID) REFERENCES Integrations (IntegrationID)');
        $this->addSql('ALTER TABLE BillingInvoices ADD CONSTRAINT FK_4FA19F7854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE ServicersToEmployeeGroups ADD CONSTRAINT FK_9E0E6B93C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE ServicersToEmployeeGroups ADD CONSTRAINT FK_9E0E6B941958C6C FOREIGN KEY (EmployeeGroupID) REFERENCES EmployeeGroups (EmployeeGroupID)');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT FK_B4F997F4854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Servicers ADD CONSTRAINT FK_B4F997F4424D9CA0 FOREIGN KEY (TimeZoneID) REFERENCES TimeZones (TimeZoneID)');
        $this->addSql('ALTER TABLE ServicersToProperties ADD CONSTRAINT FK_E2E698FD55345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE ServicersToProperties ADD CONSTRAINT FK_E2E698FD3C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE ServicersToServiceGroups ADD CONSTRAINT FK_C9B68EF913C20B89 FOREIGN KEY (ServiceGroupID) REFERENCES ServiceGroups (ServiceGroupID)');
        $this->addSql('ALTER TABLE ServicersToServiceGroups ADD CONSTRAINT FK_C9B68EF93C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TasksToServicers ADD CONSTRAINT FK_9D8D83DBEF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE TasksToServicers ADD CONSTRAINT FK_9D8D83DB3C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TaskChanges ADD CONSTRAINT FK_AB9B6D26EF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT FK_E0A2CC82424D9CA0 FOREIGN KEY (TimeZoneID) REFERENCES TimeZones (TimeZoneID)');
        $this->addSql('ALTER TABLE Customers ADD CONSTRAINT FK_E0A2CC82423D04DF FOREIGN KEY (CountryID) REFERENCES Countries (CountryID)');
        $this->addSql('ALTER TABLE InventoryItemsToProperties ADD CONSTRAINT FK_6E1244EC55345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE InventoryItemsToProperties ADD CONSTRAINT FK_6E1244EC575BEB8D FOREIGN KEY (InventoryItemID) REFERENCES InventoryItems (InventoryItemID)');
        $this->addSql('ALTER TABLE ChecklistItemsToServicesToProperties ADD CONSTRAINT FK_419FB9FBB52FC753 FOREIGN KEY (ChecklistItemID) REFERENCES ChecklistItems (ChecklistItemID)');
        $this->addSql('ALTER TABLE ChecklistItemsToServicesToProperties ADD CONSTRAINT FK_419FB9FB85991014 FOREIGN KEY (ServiceToPropertyID) REFERENCES ServicesToProperties (ServiceToPropertyID)');
        $this->addSql('ALTER TABLE PropertyGroups ADD CONSTRAINT FK_768E690F854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE BillingPayments ADD CONSTRAINT FK_B07AD50A5C729DB FOREIGN KEY (BillingInvoiceID) REFERENCES BillingInvoices (BillingInvoiceID)');
        $this->addSql('ALTER TABLE BillingPayments ADD CONSTRAINT FK_B07AD50854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE ManagersToServicers ADD CONSTRAINT FK_EF1C3B30156A2731 FOREIGN KEY (ManagerServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE ManagersToServicers ADD CONSTRAINT FK_EF1C3B303C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE InventoryItems ADD CONSTRAINT FK_FA3801A4854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE InventoryItems ADD CONSTRAINT FK_FA3801A44A01608 FOREIGN KEY (InventoryCategoryID) REFERENCES InventoryCategories (InventoryCategoryID)');
        $this->addSql('ALTER TABLE Regions ADD CONSTRAINT FK_6DDA406F854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Regions ADD CONSTRAINT FK_6DDA406F40CBC1C7 FOREIGN KEY (RegionGroupID) REFERENCES RegionGroups (RegionGroupID)');
        $this->addSql('ALTER TABLE Regions ADD CONSTRAINT FK_6DDA406F424D9CA0 FOREIGN KEY (TimeZoneID) REFERENCES TimeZones (TimeZoneID)');
        $this->addSql('ALTER TABLE MasterCalendarNotes ADD CONSTRAINT FK_9D105A90854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE MasterCalendarNotes ADD CONSTRAINT FK_9D105A9055345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE MasterCalendarNotes ADD CONSTRAINT FK_9D105A90245F4372 FOREIGN KEY (CreatedByServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TaskAcceptDeclines ADD CONSTRAINT FK_5F66D6763C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE TaskAcceptDeclines ADD CONSTRAINT FK_5F66D676EF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE ManagersToProperties ADD CONSTRAINT FK_54CCD112156A2731 FOREIGN KEY (ManagerServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE ManagersToProperties ADD CONSTRAINT FK_54CCD11255345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE TimeClockDays ADD CONSTRAINT FK_C88758213C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE CustomerReports ADD CONSTRAINT FK_FE919B95854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Images ADD CONSTRAINT FK_E7B3BB5C55345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE CustomerNotifications ADD CONSTRAINT FK_10357F4E854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Properties ADD CONSTRAINT FK_C89E32175B7A12F4 FOREIGN KEY (RegionID) REFERENCES Regions (RegionID)');
        $this->addSql('ALTER TABLE Properties ADD CONSTRAINT FK_C89E3217148DE471 FOREIGN KEY (OwnerID) REFERENCES Owners (OwnerID)');
        $this->addSql('ALTER TABLE Properties ADD CONSTRAINT FK_C89E3217854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Owners ADD CONSTRAINT FK_45DE97CC854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Owners ADD CONSTRAINT FK_45DE97CC423D04DF FOREIGN KEY (CountryID) REFERENCES Countries (CountryID)');
        $this->addSql('ALTER TABLE PropertiesToPropertyGroups ADD CONSTRAINT FK_57116E7416D32785 FOREIGN KEY (PropertyGroupID) REFERENCES PropertyGroups (PropertyGroupID)');
        $this->addSql('ALTER TABLE PropertiesToPropertyGroups ADD CONSTRAINT FK_57116E7455345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE ServicesToServicers ADD CONSTRAINT FK_26D9052C30F6DDC3 FOREIGN KEY (ServiceID) REFERENCES Services (ServiceID)');
        $this->addSql('ALTER TABLE InventoryCategories ADD CONSTRAINT FK_990A7BD9854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT FK_DDD17AB5139E259A FOREIGN KEY (FromTaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT FK_DDD17AB5EF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT FK_DDD17AB555345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT FK_DDD17AB53C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE Issues ADD CONSTRAINT FK_DDD17AB5BFDC9CAA FOREIGN KEY (SubmittedByServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE APIKeys ADD CONSTRAINT FK_1385A7B2854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE AdditionalDefaultServicers ADD CONSTRAINT FK_1A0DD39C3C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE AdditionalDefaultServicers ADD CONSTRAINT FK_1A0DD39C85991014 FOREIGN KEY (ServiceToPropertyID) REFERENCES ServicesToProperties (ServiceToPropertyID)');
        $this->addSql('ALTER TABLE IntegrationQBDTimeTrackingRecords ADD CONSTRAINT FK_CC2BFEF4ED4D199A FOREIGN KEY (IntegrationQBBatchID) REFERENCES IntegrationQBBatches (IntegrationQBBatchID)');
        $this->addSql('ALTER TABLE IntegrationQBDTimeTrackingRecords ADD CONSTRAINT FK_CC2BFEF4E0EE8C07 FOREIGN KEY (IntegrationQBDPayrollItemWageID) REFERENCES IntegrationQBDPayrollItemWages (IntegrationQBDPayrollItemWageID)');
        $this->addSql('ALTER TABLE IntegrationQBDBillingRecords ADD CONSTRAINT FK_A4DF0BDCEF8DEFC9 FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE IntegrationQBDBillingRecords ADD CONSTRAINT FK_A4DF0BDCED4D199A FOREIGN KEY (IntegrationQBBatchID) REFERENCES IntegrationQBBatches (IntegrationQBBatchID)');
        $this->addSql('ALTER TABLE PerformingImports ADD CONSTRAINT FK_29AEEEE855345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE IntegrationQBDEmployees ADD CONSTRAINT FK_33A27136854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE ServicersToRegionGroups ADD CONSTRAINT FK_4F3E73D240CBC1C7 FOREIGN KEY (RegionGroupID) REFERENCES RegionGroups (RegionGroupID)');
        $this->addSql('ALTER TABLE ServicersToRegionGroups ADD CONSTRAINT FK_4F3E73D23C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE IntegrationQBDItemsToServices ADD CONSTRAINT FK_F80C598846C236CC FOREIGN KEY (IntegrationQBDItemID) REFERENCES IntegrationQBDItems (IntegrationQBDItemID)');
        $this->addSql('ALTER TABLE IntegrationQBDItemsToServices ADD CONSTRAINT FK_F80C598830F6DDC3 FOREIGN KEY (ServiceID) REFERENCES Services (ServiceID)');
        $this->addSql('ALTER TABLE PropertyBlocks ADD CONSTRAINT FK_480EC50755345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE PropertyBlocks ADD CONSTRAINT FK_480EC507CC6341F FOREIGN KEY (PropertyBookingID) REFERENCES PropertyBookings (PropertyBookingID)');
        $this->addSql('ALTER TABLE EmployeeGroups ADD CONSTRAINT FK_5890A57B854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE ScheduledTasks ADD CONSTRAINT FK_CE19057955345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE PropertyBookingsToServices ADD CONSTRAINT FK_CD2F2E10854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE PropertyBookingsToServices ADD CONSTRAINT FK_CD2F2E10CC6341F FOREIGN KEY (PropertyBookingID) REFERENCES PropertyBookings (PropertyBookingID)');
        $this->addSql('ALTER TABLE PropertyBookingsToServices ADD CONSTRAINT FK_CD2F2E1030F6DDC3 FOREIGN KEY (ServiceID) REFERENCES Services (ServiceID)');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT FK_91994A933DCC2204 FOREIGN KEY (IssueID) REFERENCES Issues (IssueID)');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT FK_91994A93B1B54C0E FOREIGN KEY (ParentTaskID) REFERENCES Tasks (TaskID)');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT FK_91994A93CC6341F FOREIGN KEY (PropertyBookingID) REFERENCES PropertyBookings (PropertyBookingID)');
        $this->addSql('ALTER TABLE Tasks ADD CONSTRAINT FK_91994A9355345FC6 FOREIGN KEY (PropertyID) REFERENCES Properties (PropertyID)');
        $this->addSql('ALTER TABLE IntegrationQBDPayrollItemWages ADD CONSTRAINT FK_F203B0DA854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE IntegrationQBDCustomers ADD CONSTRAINT FK_EB73FC17854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE BillingRefunds ADD CONSTRAINT FK_C0D5BF4EED7AE224 FOREIGN KEY (BillingPaymentID) REFERENCES BillingPayments (BillingPaymentID)');
        $this->addSql('ALTER TABLE BillingRefunds ADD CONSTRAINT FK_C0D5BF4EA5C729DB FOREIGN KEY (BillingInvoiceID) REFERENCES BillingInvoices (BillingInvoiceID)');
        $this->addSql('ALTER TABLE ChecklistItems ADD CONSTRAINT FK_366ECB6D854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE BillingDebits ADD CONSTRAINT FK_1C96C0F3854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE SchedulingCalendarNotes ADD CONSTRAINT FK_A18E0EA4854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE SchedulingCalendarNotes ADD CONSTRAINT FK_A18E0EA43C7E7BEF FOREIGN KEY (ServicerID) REFERENCES Servicers (ServicerID)');
        $this->addSql('ALTER TABLE PropertyUtilityTypes ADD CONSTRAINT FK_580AF743854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE IntegrationQBDDataSyncLogs ADD CONSTRAINT FK_87D6A9A8854CF4BD FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID)');
        $this->addSql('ALTER TABLE BillingInvoiceItems ADD CONSTRAINT FK_98B30F98A5C729DB FOREIGN KEY (BillingInvoiceID) REFERENCES BillingInvoices (BillingInvoiceID)');
    }

    public function down(Schema $schema) : void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mssql', 'Migration can only be executed safely on \'mssql\'.');

        $this->addSql('CREATE SCHEMA db_accessadmin');
        $this->addSql('CREATE SCHEMA db_backupoperator');
        $this->addSql('CREATE SCHEMA db_datareader');
        $this->addSql('CREATE SCHEMA db_datawriter');
        $this->addSql('CREATE SCHEMA db_ddladmin');
        $this->addSql('CREATE SCHEMA db_denydatareader');
        $this->addSql('CREATE SCHEMA db_denydatawriter');
        $this->addSql('CREATE SCHEMA db_owner');
        $this->addSql('CREATE SCHEMA db_securityadmin');
        $this->addSql('CREATE SCHEMA dbo');
        $this->addSql('ALTER TABLE Regions DROP CONSTRAINT FK_6DDA406F40CBC1C7');
        $this->addSql('ALTER TABLE ServicersToRegionGroups DROP CONSTRAINT FK_4F3E73D240CBC1C7');
        $this->addSql('ALTER TABLE ChecklistItemsToServicesToProperties DROP CONSTRAINT FK_419FB9FB85991014');
        $this->addSql('ALTER TABLE AdditionalDefaultServicers DROP CONSTRAINT FK_1A0DD39C85991014');
        $this->addSql('ALTER TABLE IntegrationQBDTimeTrackingRecords DROP CONSTRAINT FK_CC2BFEF4ED4D199A');
        $this->addSql('ALTER TABLE IntegrationQBDBillingRecords DROP CONSTRAINT FK_A4DF0BDCED4D199A');
        $this->addSql('ALTER TABLE ServicesToProperties DROP CONSTRAINT FK_40044863B650950C');
        $this->addSql('ALTER TABLE Checklists DROP CONSTRAINT FK_FFDE98EFBCFBD3DE');
        $this->addSql('ALTER TABLE Services DROP CONSTRAINT FK_8A44833FB650950C');
        $this->addSql('ALTER TABLE ChecklistsToChecklistItems DROP CONSTRAINT FK_7D87A201B650950C');
        $this->addSql('ALTER TABLE ServicesToProperties DROP CONSTRAINT FK_4004486330F6DDC3');
        $this->addSql('ALTER TABLE ServicesToServicers DROP CONSTRAINT FK_26D9052C30F6DDC3');
        $this->addSql('ALTER TABLE IntegrationQBDItemsToServices DROP CONSTRAINT FK_F80C598830F6DDC3');
        $this->addSql('ALTER TABLE PropertyBookingsToServices DROP CONSTRAINT FK_CD2F2E1030F6DDC3');
        $this->addSql('ALTER TABLE Notifications DROP CONSTRAINT FK_D37EFB26CC6341F');
        $this->addSql('ALTER TABLE PropertyBlocks DROP CONSTRAINT FK_480EC507CC6341F');
        $this->addSql('ALTER TABLE PropertyBookingsToServices DROP CONSTRAINT FK_CD2F2E10CC6341F');
        $this->addSql('ALTER TABLE Tasks DROP CONSTRAINT FK_91994A93CC6341F');
        $this->addSql('ALTER TABLE Services DROP CONSTRAINT FK_8A44833F13C20B89');
        $this->addSql('ALTER TABLE ServicersToServiceGroups DROP CONSTRAINT FK_C9B68EF913C20B89');
        $this->addSql('ALTER TABLE Servicers DROP CONSTRAINT FK_B4F997F4424D9CA0');
        $this->addSql('ALTER TABLE Customers DROP CONSTRAINT FK_E0A2CC82424D9CA0');
        $this->addSql('ALTER TABLE Regions DROP CONSTRAINT FK_6DDA406F424D9CA0');
        $this->addSql('ALTER TABLE BillingCredits DROP CONSTRAINT FK_FF2754E9A5C729DB');
        $this->addSql('ALTER TABLE BillingPayments DROP CONSTRAINT FK_B07AD50A5C729DB');
        $this->addSql('ALTER TABLE BillingRefunds DROP CONSTRAINT FK_C0D5BF4EA5C729DB');
        $this->addSql('ALTER TABLE BillingInvoiceItems DROP CONSTRAINT FK_98B30F98A5C729DB');
        $this->addSql('ALTER TABLE APIKeysToAPIPublicResources DROP CONSTRAINT FK_CA5905CC8BC57D53');
        $this->addSql('ALTER TABLE Notifications DROP CONSTRAINT FK_D37EFB263C7E7BEF');
        $this->addSql('ALTER TABLE Notifications DROP CONSTRAINT FK_D37EFB26AC1A3790');
        $this->addSql('ALTER TABLE GPSTracking DROP CONSTRAINT FK_521799583C7E7BEF');
        $this->addSql('ALTER TABLE ServicesToProperties DROP CONSTRAINT FK_40044863CE23C0AF');
        $this->addSql('ALTER TABLE IntegrationQBDEmployeesToServicers DROP CONSTRAINT FK_C9B852E03C7E7BEF');
        $this->addSql('ALTER TABLE TaskOffers DROP CONSTRAINT FK_DF2BF57D3C7E7BEF');
        $this->addSql('ALTER TABLE TimeClockTasks DROP CONSTRAINT FK_B8C3D2003C7E7BEF');
        $this->addSql('ALTER TABLE ServicersToEmployeeGroups DROP CONSTRAINT FK_9E0E6B93C7E7BEF');
        $this->addSql('ALTER TABLE ServicersToProperties DROP CONSTRAINT FK_E2E698FD3C7E7BEF');
        $this->addSql('ALTER TABLE ServicersToServiceGroups DROP CONSTRAINT FK_C9B68EF93C7E7BEF');
        $this->addSql('ALTER TABLE TasksToServicers DROP CONSTRAINT FK_9D8D83DB3C7E7BEF');
        $this->addSql('ALTER TABLE ManagersToServicers DROP CONSTRAINT FK_EF1C3B30156A2731');
        $this->addSql('ALTER TABLE ManagersToServicers DROP CONSTRAINT FK_EF1C3B303C7E7BEF');
        $this->addSql('ALTER TABLE MasterCalendarNotes DROP CONSTRAINT FK_9D105A90245F4372');
        $this->addSql('ALTER TABLE TaskAcceptDeclines DROP CONSTRAINT FK_5F66D6763C7E7BEF');
        $this->addSql('ALTER TABLE ManagersToProperties DROP CONSTRAINT FK_54CCD112156A2731');
        $this->addSql('ALTER TABLE TimeClockDays DROP CONSTRAINT FK_C88758213C7E7BEF');
        $this->addSql('ALTER TABLE Issues DROP CONSTRAINT FK_DDD17AB53C7E7BEF');
        $this->addSql('ALTER TABLE Issues DROP CONSTRAINT FK_DDD17AB5BFDC9CAA');
        $this->addSql('ALTER TABLE AdditionalDefaultServicers DROP CONSTRAINT FK_1A0DD39C3C7E7BEF');
        $this->addSql('ALTER TABLE ServicersToRegionGroups DROP CONSTRAINT FK_4F3E73D23C7E7BEF');
        $this->addSql('ALTER TABLE SchedulingCalendarNotes DROP CONSTRAINT FK_A18E0EA43C7E7BEF');
        $this->addSql('ALTER TABLE Customers DROP CONSTRAINT FK_E0A2CC82423D04DF');
        $this->addSql('ALTER TABLE Owners DROP CONSTRAINT FK_45DE97CC423D04DF');
        $this->addSql('ALTER TABLE IntegrationQBDItemsToServices DROP CONSTRAINT FK_F80C598846C236CC');
        $this->addSql('ALTER TABLE Notifications DROP CONSTRAINT FK_D37EFB26C409BF01');
        $this->addSql('ALTER TABLE RegionGroups DROP CONSTRAINT FK_DDAC083A854CF4BD');
        $this->addSql('ALTER TABLE PropertyItemTypes DROP CONSTRAINT FK_D1F153A9854CF4BD');
        $this->addSql('ALTER TABLE IntegrationQBBatches DROP CONSTRAINT FK_6CC1D73B854CF4BD');
        $this->addSql('ALTER TABLE Checklists DROP CONSTRAINT FK_FFDE98EF854CF4BD');
        $this->addSql('ALTER TABLE BillingCustomerPropertyCounts DROP CONSTRAINT FK_F973F0DD854CF4BD');
        $this->addSql('ALTER TABLE EndpointCatches DROP CONSTRAINT FK_D5442D99854CF4BD');
        $this->addSql('ALTER TABLE Services DROP CONSTRAINT FK_8A44833F854CF4BD');
        $this->addSql('ALTER TABLE BillingCredits DROP CONSTRAINT FK_FF2754E9854CF4BD');
        $this->addSql('ALTER TABLE BillingCustomerData DROP CONSTRAINT FK_E8D5C0FE854CF4BD');
        $this->addSql('ALTER TABLE ServiceGroups DROP CONSTRAINT FK_67F576C8854CF4BD');
        $this->addSql('ALTER TABLE Onboardings DROP CONSTRAINT FK_7A09CA60854CF4BD');
        $this->addSql('ALTER TABLE IntegrationsToCustomers DROP CONSTRAINT FK_EE874FDF854CF4BD');
        $this->addSql('ALTER TABLE BillingInvoices DROP CONSTRAINT FK_4FA19F7854CF4BD');
        $this->addSql('ALTER TABLE Servicers DROP CONSTRAINT FK_B4F997F4854CF4BD');
        $this->addSql('ALTER TABLE PropertyGroups DROP CONSTRAINT FK_768E690F854CF4BD');
        $this->addSql('ALTER TABLE BillingPayments DROP CONSTRAINT FK_B07AD50854CF4BD');
        $this->addSql('ALTER TABLE InventoryItems DROP CONSTRAINT FK_FA3801A4854CF4BD');
        $this->addSql('ALTER TABLE Regions DROP CONSTRAINT FK_6DDA406F854CF4BD');
        $this->addSql('ALTER TABLE MasterCalendarNotes DROP CONSTRAINT FK_9D105A90854CF4BD');
        $this->addSql('ALTER TABLE CustomerReports DROP CONSTRAINT FK_FE919B95854CF4BD');
        $this->addSql('ALTER TABLE CustomerNotifications DROP CONSTRAINT FK_10357F4E854CF4BD');
        $this->addSql('ALTER TABLE Properties DROP CONSTRAINT FK_C89E3217854CF4BD');
        $this->addSql('ALTER TABLE Owners DROP CONSTRAINT FK_45DE97CC854CF4BD');
        $this->addSql('ALTER TABLE InventoryCategories DROP CONSTRAINT FK_990A7BD9854CF4BD');
        $this->addSql('ALTER TABLE APIKeys DROP CONSTRAINT FK_1385A7B2854CF4BD');
        $this->addSql('ALTER TABLE IntegrationQBDEmployees DROP CONSTRAINT FK_33A27136854CF4BD');
        $this->addSql('ALTER TABLE EmployeeGroups DROP CONSTRAINT FK_5890A57B854CF4BD');
        $this->addSql('ALTER TABLE PropertyBookingsToServices DROP CONSTRAINT FK_CD2F2E10854CF4BD');
        $this->addSql('ALTER TABLE IntegrationQBDPayrollItemWages DROP CONSTRAINT FK_F203B0DA854CF4BD');
        $this->addSql('ALTER TABLE IntegrationQBDCustomers DROP CONSTRAINT FK_EB73FC17854CF4BD');
        $this->addSql('ALTER TABLE ChecklistItems DROP CONSTRAINT FK_366ECB6D854CF4BD');
        $this->addSql('ALTER TABLE BillingDebits DROP CONSTRAINT FK_1C96C0F3854CF4BD');
        $this->addSql('ALTER TABLE SchedulingCalendarNotes DROP CONSTRAINT FK_A18E0EA4854CF4BD');
        $this->addSql('ALTER TABLE PropertyUtilityTypes DROP CONSTRAINT FK_580AF743854CF4BD');
        $this->addSql('ALTER TABLE IntegrationQBDDataSyncLogs DROP CONSTRAINT FK_87D6A9A8854CF4BD');
        $this->addSql('ALTER TABLE PropertiesToPropertyGroups DROP CONSTRAINT FK_57116E7416D32785');
        $this->addSql('ALTER TABLE BillingRefunds DROP CONSTRAINT FK_C0D5BF4EED7AE224');
        $this->addSql('ALTER TABLE InventoryItemsToProperties DROP CONSTRAINT FK_6E1244EC575BEB8D');
        $this->addSql('ALTER TABLE Properties DROP CONSTRAINT FK_C89E32175B7A12F4');
        $this->addSql('ALTER TABLE ServicesToProperties DROP CONSTRAINT FK_4004486355345FC6');
        $this->addSql('ALTER TABLE PropertyItems DROP CONSTRAINT FK_D19C429D55345FC6');
        $this->addSql('ALTER TABLE IntegrationQBDCustomersToProperties DROP CONSTRAINT FK_F2D44FF655345FC6');
        $this->addSql('ALTER TABLE PropertyUtilities DROP CONSTRAINT FK_2FD5670855345FC6');
        $this->addSql('ALTER TABLE PropertyBookings DROP CONSTRAINT FK_B9498E1B55345FC6');
        $this->addSql('ALTER TABLE ServicersToProperties DROP CONSTRAINT FK_E2E698FD55345FC6');
        $this->addSql('ALTER TABLE InventoryItemsToProperties DROP CONSTRAINT FK_6E1244EC55345FC6');
        $this->addSql('ALTER TABLE MasterCalendarNotes DROP CONSTRAINT FK_9D105A9055345FC6');
        $this->addSql('ALTER TABLE ManagersToProperties DROP CONSTRAINT FK_54CCD11255345FC6');
        $this->addSql('ALTER TABLE Images DROP CONSTRAINT FK_E7B3BB5C55345FC6');
        $this->addSql('ALTER TABLE PropertiesToPropertyGroups DROP CONSTRAINT FK_57116E7455345FC6');
        $this->addSql('ALTER TABLE Issues DROP CONSTRAINT FK_DDD17AB555345FC6');
        $this->addSql('ALTER TABLE PerformingImports DROP CONSTRAINT FK_29AEEEE855345FC6');
        $this->addSql('ALTER TABLE PropertyBlocks DROP CONSTRAINT FK_480EC50755345FC6');
        $this->addSql('ALTER TABLE ScheduledTasks DROP CONSTRAINT FK_CE19057955345FC6');
        $this->addSql('ALTER TABLE Tasks DROP CONSTRAINT FK_91994A9355345FC6');
        $this->addSql('ALTER TABLE Notifications DROP CONSTRAINT FK_D37EFB26148DE471');
        $this->addSql('ALTER TABLE Properties DROP CONSTRAINT FK_C89E3217148DE471');
        $this->addSql('ALTER TABLE InventoryItems DROP CONSTRAINT FK_FA3801A44A01608');
        $this->addSql('ALTER TABLE Tasks DROP CONSTRAINT FK_91994A933DCC2204');
        $this->addSql('ALTER TABLE APIKeysToAPIPublicResources DROP CONSTRAINT FK_CA5905CCA366E37A');
        $this->addSql('ALTER TABLE IntegrationsToCustomers DROP CONSTRAINT FK_EE874FDF31B9B12');
        $this->addSql('ALTER TABLE IntegrationQBDEmployeesToServicers DROP CONSTRAINT FK_C9B852E049938395');
        $this->addSql('ALTER TABLE ServicersToEmployeeGroups DROP CONSTRAINT FK_9E0E6B941958C6C');
        $this->addSql('ALTER TABLE Notifications DROP CONSTRAINT FK_D37EFB26EF8DEFC9');
        $this->addSql('ALTER TABLE TasksToChecklistItems DROP CONSTRAINT FK_BD3AEC17EF8DEFC9');
        $this->addSql('ALTER TABLE TaskOffers DROP CONSTRAINT FK_DF2BF57DEF8DEFC9');
        $this->addSql('ALTER TABLE TimeClockTasks DROP CONSTRAINT FK_B8C3D200EF8DEFC9');
        $this->addSql('ALTER TABLE TasksToServicers DROP CONSTRAINT FK_9D8D83DBEF8DEFC9');
        $this->addSql('ALTER TABLE TaskChanges DROP CONSTRAINT FK_AB9B6D26EF8DEFC9');
        $this->addSql('ALTER TABLE TaskAcceptDeclines DROP CONSTRAINT FK_5F66D676EF8DEFC9');
        $this->addSql('ALTER TABLE Issues DROP CONSTRAINT FK_DDD17AB5139E259A');
        $this->addSql('ALTER TABLE Issues DROP CONSTRAINT FK_DDD17AB5EF8DEFC9');
        $this->addSql('ALTER TABLE IntegrationQBDBillingRecords DROP CONSTRAINT FK_A4DF0BDCEF8DEFC9');
        $this->addSql('ALTER TABLE Tasks DROP CONSTRAINT FK_91994A93B1B54C0E');
        $this->addSql('ALTER TABLE IntegrationsToCustomers DROP CONSTRAINT FK_EE874FDF1389864B');
        $this->addSql('ALTER TABLE IntegrationsToCustomers DROP CONSTRAINT FK_EE874FDF4182F12B');
        $this->addSql('ALTER TABLE IntegrationQBDTimeTrackingRecords DROP CONSTRAINT FK_CC2BFEF4E0EE8C07');
        $this->addSql('ALTER TABLE IntegrationQBDCustomersToProperties DROP CONSTRAINT FK_F2D44FF65224246');
        $this->addSql('ALTER TABLE TasksToChecklistItems DROP CONSTRAINT FK_BD3AEC17B52FC753');
        $this->addSql('ALTER TABLE ChecklistsToChecklistItems DROP CONSTRAINT FK_7D87A201B52FC753');
        $this->addSql('ALTER TABLE ChecklistItemsToServicesToProperties DROP CONSTRAINT FK_419FB9FBB52FC753');
        $this->addSql('ALTER TABLE PropertyUtilities DROP CONSTRAINT FK_2FD567086997AEA0');
        $this->addSql('DROP TABLE Notifications');
        $this->addSql('DROP TABLE GPSTracking');
        $this->addSql('DROP TABLE APIKeysToAPIPublicResources');
        $this->addSql('DROP TABLE RegionGroups');
        $this->addSql('DROP TABLE TasksToChecklistItems');
        $this->addSql('DROP TABLE PropertyItemTypes');
        $this->addSql('DROP TABLE ServicesToProperties');
        $this->addSql('DROP TABLE IntegrationQBBatches');
        $this->addSql('DROP TABLE Checklists');
        $this->addSql('DROP TABLE BillingCustomerPropertyCounts');
        $this->addSql('DROP TABLE EndpointCatches');
        $this->addSql('DROP TABLE Services');
        $this->addSql('DROP TABLE ChecklistsToChecklistItems');
        $this->addSql('DROP TABLE PropertyItems');
        $this->addSql('DROP TABLE Contacts');
        $this->addSql('DROP TABLE IntegrationQBDCustomersToProperties');
        $this->addSql('DROP TABLE PropertyUtilities');
        $this->addSql('DROP TABLE PropertyBookings');
        $this->addSql('DROP TABLE IntegrationQBDEmployeesToServicers');
        $this->addSql('DROP TABLE TaskOffers');
        $this->addSql('DROP TABLE BillingCredits');
        $this->addSql('DROP TABLE BillingCustomerData');
        $this->addSql('DROP TABLE ServiceGroups');
        $this->addSql('DROP TABLE TimeClockTasks');
        $this->addSql('DROP TABLE TimeZones');
        $this->addSql('DROP TABLE Onboardings');
        $this->addSql('DROP TABLE IntegrationsToCustomers');
        $this->addSql('DROP TABLE BillingPaymentSources');
        $this->addSql('DROP TABLE BillingInvoices');
        $this->addSql('DROP TABLE ServicersToEmployeeGroups');
        $this->addSql('DROP TABLE APIPublicResources');
        $this->addSql('DROP TABLE Servicers');
        $this->addSql('DROP TABLE ServicersToProperties');
        $this->addSql('DROP TABLE Countries');
        $this->addSql('DROP TABLE IntegrationQBDItems');
        $this->addSql('DROP TABLE Plans');
        $this->addSql('DROP TABLE ServicersToServiceGroups');
        $this->addSql('DROP TABLE BillingMonthlyItems');
        $this->addSql('DROP TABLE TasksToServicers');
        $this->addSql('DROP TABLE ScheduledImagesToProcess');
        $this->addSql('DROP TABLE TaskChanges');
        $this->addSql('DROP TABLE Customers');
        $this->addSql('DROP TABLE Settings');
        $this->addSql('DROP TABLE InventoryItemsToProperties');
        $this->addSql('DROP TABLE ChecklistItemsToServicesToProperties');
        $this->addSql('DROP TABLE PropertyGroups');
        $this->addSql('DROP TABLE BillingPayments');
        $this->addSql('DROP TABLE ManagersToServicers');
        $this->addSql('DROP TABLE InventoryItems');
        $this->addSql('DROP TABLE Regions');
        $this->addSql('DROP TABLE MasterCalendarNotes');
        $this->addSql('DROP TABLE TaskAcceptDeclines');
        $this->addSql('DROP TABLE ManagersToProperties');
        $this->addSql('DROP TABLE TimeClockDays');
        $this->addSql('DROP TABLE CustomerReports');
        $this->addSql('DROP TABLE Images');
        $this->addSql('DROP TABLE CustomerNotifications');
        $this->addSql('DROP TABLE Properties');
        $this->addSql('DROP TABLE Owners');
        $this->addSql('DROP TABLE PropertiesToPropertyGroups');
        $this->addSql('DROP TABLE ServicesToServicers');
        $this->addSql('DROP TABLE InventoryCategories');
        $this->addSql('DROP TABLE ScheduledWebHooks');
        $this->addSql('DROP TABLE Issues');
        $this->addSql('DROP TABLE APIKeys');
        $this->addSql('DROP TABLE AdditionalDefaultServicers');
        $this->addSql('DROP TABLE Integrations');
        $this->addSql('DROP TABLE IntegrationQBDTimeTrackingRecords');
        $this->addSql('DROP TABLE IntegrationQBDBillingRecords');
        $this->addSql('DROP TABLE PerformingImports');
        $this->addSql('DROP TABLE IntegrationQBDEmployees');
        $this->addSql('DROP TABLE ServicersToRegionGroups');
        $this->addSql('DROP TABLE IntegrationQBDItemsToServices');
        $this->addSql('DROP TABLE PropertyBlocks');
        $this->addSql('DROP TABLE EmployeeGroups');
        $this->addSql('DROP TABLE ScheduledTasks');
        $this->addSql('DROP TABLE PropertyBookingsToServices');
        $this->addSql('DROP TABLE Tasks');
        $this->addSql('DROP TABLE IntegrationQBDPayrollItemWages');
        $this->addSql('DROP TABLE IntegrationQBDCustomers');
        $this->addSql('DROP TABLE BillingRefunds');
        $this->addSql('DROP TABLE ChecklistItems');
        $this->addSql('DROP TABLE BillingDebits');
        $this->addSql('DROP TABLE SchedulingCalendarNotes');
        $this->addSql('DROP TABLE PropertyUtilityTypes');
        $this->addSql('DROP TABLE IntegrationQBDDataSyncLogs');
        $this->addSql('DROP TABLE BillingInvoiceItems');
    }
}
